2021.12.13 09:48:28.722188 [ 1 ] {} <Information> SentryWriter: Sending crash reports is disabled
2021.12.13 09:48:28.734045 [ 1 ] {} <Trace> Pipe: Pipe capacity is 1.00 MiB
2021.12.13 09:48:28.794338 [ 1 ] {} <Information> : Starting ClickHouse 21.11.5.33 with revision 54456, build id: 76A10A4F605EF849249F2E8673661F7254B779DA, PID 1
2021.12.13 09:48:28.794465 [ 1 ] {} <Information> Application: starting up
2021.12.13 09:48:28.794487 [ 1 ] {} <Information> Application: OS name: Linux, version: 5.4.72-microsoft-standard-WSL2, architecture: x86_64
2021.12.13 09:48:29.038161 [ 1 ] {} <Information> Application: Calculated checksum of the binary: C15C810B6E66F79A9EEA93F482814160, integrity check passed.
2021.12.13 09:48:29.038319 [ 1 ] {} <Information> Application: It looks like the process has no CAP_IPC_LOCK capability, binary mlock will be disabled. It could happen due to incorrect ClickHouse package installation. You could resolve the problem manually with 'sudo setcap cap_ipc_lock=+ep /usr/bin/clickhouse'. Note that it will not work on 'nosuid' mounted filesystems.
2021.12.13 09:48:29.043560 [ 1 ] {} <Debug> Application: rlimit on number of file descriptors is 262144
2021.12.13 09:48:29.043583 [ 1 ] {} <Debug> Application: Initializing DateLUT.
2021.12.13 09:48:29.043588 [ 1 ] {} <Trace> Application: Initialized DateLUT with time zone 'UTC'.
2021.12.13 09:48:29.043614 [ 1 ] {} <Debug> Application: Setting up /var/lib/clickhouse/tmp/ to store temporary data in it
2021.12.13 09:48:29.044410 [ 1 ] {} <Debug> Application: Configuration parameter 'interserver_http_host' doesn't exist or exists and empty. Will use '58c8f5f00995' as replica host.
2021.12.13 09:48:29.044437 [ 1 ] {} <Debug> Application: Initiailizing interserver credentials.
2021.12.13 09:48:29.044579 [ 1 ] {} <Information> SensitiveDataMaskerConfigRead: 1 query masking rules loaded.
2021.12.13 09:48:29.046601 [ 1 ] {} <Debug> ConfigReloader: Loading config '/etc/clickhouse-server/config.xml'
2021.12.13 09:48:29.051838 [ 1 ] {} <Debug> ConfigReloader: Loaded config '/etc/clickhouse-server/config.xml', performing update on configuration
2021.12.13 09:48:29.053357 [ 1 ] {} <Information> Application: Setting max_server_memory_usage was set to 11.08 GiB (12.31 GiB available * 0.90 max_server_memory_usage_to_ram_ratio)
2021.12.13 09:48:29.056761 [ 1 ] {} <Debug> ConfigReloader: Loaded config '/etc/clickhouse-server/config.xml', performed update on configuration
2021.12.13 09:48:29.060110 [ 1 ] {} <Debug> ConfigReloader: Loading config '/etc/clickhouse-server/users.xml'
2021.12.13 09:48:29.061412 [ 1 ] {} <Debug> ConfigReloader: Loaded config '/etc/clickhouse-server/users.xml', performing update on configuration
2021.12.13 09:48:29.062063 [ 1 ] {} <Debug> ConfigReloader: Loaded config '/etc/clickhouse-server/users.xml', performed update on configuration
2021.12.13 09:48:29.063013 [ 1 ] {} <Debug> Access(user directories): Added users.xml access storage 'users.xml', path: /etc/clickhouse-server/users.xml
2021.12.13 09:48:29.063188 [ 1 ] {} <Warning> Access(local directory): File /var/lib/clickhouse/access/users.list doesn't exist
2021.12.13 09:48:29.063214 [ 1 ] {} <Warning> Access(local directory): Recovering lists in directory /var/lib/clickhouse/access/
2021.12.13 09:48:29.064220 [ 1 ] {} <Debug> Access(user directories): Added local directory access storage 'local directory', path: /var/lib/clickhouse/access/
2021.12.13 09:48:29.064321 [ 1 ] {} <Information> Application: Uncompressed cache size was lowered to 6.15 GiB because the system has low amount of memory
2021.12.13 09:48:29.066883 [ 1 ] {} <Information> Context: Initialized background executor for merges and mutations with num_threads=16, num_tasks=32
2021.12.13 09:48:29.067236 [ 1 ] {} <Information> Context: Initialized background executor for move operations with num_threads=8, num_tasks=8
2021.12.13 09:48:29.071196 [ 1 ] {} <Information> Context: Initialized background executor for fetches with num_threads=8, num_tasks=8
2021.12.13 09:48:29.071621 [ 1 ] {} <Information> Context: Initialized background executor for common operations (e.g. clearing old parts) with num_threads=8, num_tasks=8
2021.12.13 09:48:29.072958 [ 1 ] {} <Information> Application: Loading user defined objects from /var/lib/clickhouse/
2021.12.13 09:48:29.072984 [ 1 ] {} <Debug> UserDefinedSQLObjectsLoader: loading user defined objects
2021.12.13 09:48:29.073020 [ 1 ] {} <Debug> Application: Loaded user defined objects
2021.12.13 09:48:29.073029 [ 1 ] {} <Information> Application: Loading metadata from /var/lib/clickhouse/
2021.12.13 09:48:29.090804 [ 1 ] {} <Information> DatabaseAtomic (system): Metadata processed, database system has 0 tables and 0 dictionaries in total.
2021.12.13 09:48:29.090831 [ 1 ] {} <Information> TablesLoader: Parsed metadata of 0 tables in 1 databases in 0.0002003 sec
2021.12.13 09:48:29.090852 [ 1 ] {} <Information> TablesLoader: Loading 0 tables with 0 dependency level
2021.12.13 09:48:29.092624 [ 1 ] {} <Debug> SystemLog: Not creating system.text_log since corresponding section 'text_log' is missing from config
2021.12.13 09:48:29.093408 [ 1 ] {} <Debug> SystemLog: Not creating system.zookeeper_log since corresponding section 'zookeeper_log' is missing from config
2021.12.13 09:48:29.117887 [ 1 ] {} <Information> DatabaseCatalog: Found 0 partially dropped tables. Will load them and retry removal.
2021.12.13 09:48:29.124174 [ 1 ] {} <Information> DatabaseAtomic (default): Metadata processed, database default has 0 tables and 0 dictionaries in total.
2021.12.13 09:48:29.124197 [ 1 ] {} <Information> TablesLoader: Parsed metadata of 0 tables in 1 databases in 8.34e-05 sec
2021.12.13 09:48:29.124203 [ 1 ] {} <Information> TablesLoader: Loading 0 tables with 0 dependency level
2021.12.13 09:48:29.124209 [ 1 ] {} <Information> DatabaseAtomic (default): Starting up tables.
2021.12.13 09:48:29.124215 [ 1 ] {} <Information> DatabaseAtomic (system): Starting up tables.
2021.12.13 09:48:29.132584 [ 1 ] {} <Information> BackgroundSchedulePool/BgSchPool: Create BackgroundSchedulePool with 128 threads
2021.12.13 09:48:29.147343 [ 1 ] {} <Debug> Application: Loaded metadata.
2021.12.13 09:48:29.147411 [ 1 ] {} <Trace> Pipe: Pipe capacity is 1.00 MiB
2021.12.13 09:48:29.147503 [ 1 ] {} <Information> Application: It looks like the process has no CAP_SYS_NICE capability, the setting 'os_thread_priority' will have no effect. It could happen due to incorrect ClickHouse package installation. You could resolve the problem manually with 'sudo setcap cap_sys_nice=+ep /usr/bin/clickhouse'. Note that it will not work on 'nosuid' mounted filesystems.
2021.12.13 09:48:29.151806 [ 1 ] {} <Trace> AsynchronousMetrics: Scanning /sys/class/thermal
2021.12.13 09:48:29.151975 [ 1 ] {} <Trace> AsynchronousMetrics: Scanning /sys/block
2021.12.13 09:48:29.153686 [ 1 ] {} <Trace> AsynchronousMetrics: Scanning /sys/devices/system/edac
2021.12.13 09:48:29.153728 [ 1 ] {} <Trace> AsynchronousMetrics: Scanning /sys/class/hwmon
2021.12.13 09:48:29.154103 [ 1 ] {} <Warning> Application: Listen [::]:8123 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 21.11.5.33 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2021.12.13 09:48:29.155437 [ 1 ] {} <Warning> Application: Listen [::]:9000 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 21.11.5.33 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2021.12.13 09:48:29.155921 [ 1 ] {} <Warning> Application: Listen [::]:9009 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 21.11.5.33 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2021.12.13 09:48:29.159348 [ 1 ] {} <Warning> Application: Listen [::]:9004 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 21.11.5.33 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2021.12.13 09:48:29.159563 [ 1 ] {} <Warning> Application: Listen [::]:9005 failed: Poco::Exception. Code: 1000, e.code() = 0, DNS error: EAI: Address family for hostname not supported (version 21.11.5.33 (official build)). If it is an IPv6 or IPv4 address and your host has disabled IPv6 or IPv4, then consider to specify not disabled IPv4 or IPv6 address to listen in <listen_host> element of configuration file. Example for disabled IPv6: <listen_host>0.0.0.0</listen_host> . Example for disabled IPv4: <listen_host>::</listen_host>
2021.12.13 09:48:29.160685 [ 1 ] {} <Information> Application: Listening for http://0.0.0.0:8123
2021.12.13 09:48:29.160970 [ 1 ] {} <Information> Application: Listening for connections with native protocol (tcp): 0.0.0.0:9000
2021.12.13 09:48:29.161039 [ 1 ] {} <Information> Application: Listening for replica communication (interserver): http://0.0.0.0:9009
2021.12.13 09:48:29.170401 [ 1 ] {} <Trace> MySQLHandlerFactory: Failed to create SSL context. SSL will be disabled. Error: Poco::Exception. Code: 1000, e.code() = 0, SSL context exception: Error loading private key from file /etc/clickhouse-server/server.key: error:02000002:system library:OPENSSL_internal:No such file or directory (version 21.11.5.33 (official build))
2021.12.13 09:48:29.170586 [ 1 ] {} <Trace> MySQLHandlerFactory: Failed to read RSA key pair from server certificate. Error: Code: 76. DB::Exception: Cannot open certificate file: /etc/clickhouse-server/server.crt. (CANNOT_OPEN_FILE) (version 21.11.5.33 (official build))
2021.12.13 09:48:29.170599 [ 1 ] {} <Trace> MySQLHandlerFactory: Generating new RSA key pair.
2021.12.13 09:48:29.419429 [ 1 ] {} <Information> Application: Listening for MySQL compatibility protocol: 0.0.0.0:9004
2021.12.13 09:48:29.419518 [ 1 ] {} <Information> Application: Listening for PostgreSQL compatibility protocol: 0.0.0.0:9005
2021.12.13 09:48:29.419559 [ 1 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 6.03 MiB, peak 10.61 MiB, will set to 354.56 MiB (RSS), difference: 348.53 MiB
2021.12.13 09:48:29.420632 [ 1 ] {} <Information> DNSCacheUpdater: Update period 15 seconds
2021.12.13 09:48:29.420712 [ 1 ] {} <Information> Application: Available RAM: 12.31 GiB; physical cores: 4; logical cores: 8.
2021.12.13 09:48:29.421627 [ 1 ] {} <Information> Application: Ready for connections.
2021.12.13 09:48:29.422469 [ 110 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:48:29.422678 [ 110 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:48:36.113160 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3540 entries to flush up to offset 3540
2021.12.13 09:48:36.113212 [ 97 ] {} <Debug> SystemLog (system.asynchronous_metric_log): Creating new table system.asynchronous_metric_log for AsynchronousMetricLog
2021.12.13 09:48:36.116647 [ 97 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Loading data parts
2021.12.13 09:48:36.116999 [ 97 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): There are no data parts
2021.12.13 09:48:36.120318 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:48:36.122368 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_1_1_0 to 202112_1_1_0.
2021.12.13 09:48:36.122551 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 3540
2021.12.13 09:48:36.613039 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 7 entries to flush up to offset 7
2021.12.13 09:48:36.613113 [ 100 ] {} <Debug> SystemLog (system.trace_log): Creating new table system.trace_log for TraceLog
2021.12.13 09:48:36.613110 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 8
2021.12.13 09:48:36.613138 [ 96 ] {} <Debug> SystemLog (system.metric_log): Creating new table system.metric_log for MetricLog
2021.12.13 09:48:36.616741 [ 100 ] {} <Debug> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Loading data parts
2021.12.13 09:48:36.616876 [ 100 ] {} <Debug> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): There are no data parts
2021.12.13 09:48:36.619640 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:48:36.620556 [ 96 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Loading data parts
2021.12.13 09:48:36.620636 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_1_1_0 to 202112_1_1_0.
2021.12.13 09:48:36.620684 [ 96 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): There are no data parts
2021.12.13 09:48:36.620805 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 7
2021.12.13 09:48:36.630765 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:48:36.635526 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_1_1_0 to 202112_1_1_0.
2021.12.13 09:48:36.636630 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 8
2021.12.13 09:48:37.000248 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 356.49 MiB, peak 360.49 MiB, will set to 372.34 MiB (RSS), difference: 15.86 MiB
2021.12.13 09:48:43.122732 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3453 entries to flush up to offset 6993
2021.12.13 09:48:43.124513 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:48:43.125790 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_2_2_0 to 202112_2_2_0.
2021.12.13 09:48:43.125969 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 6993
2021.12.13 09:48:44.120951 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 4 entries to flush up to offset 11
2021.12.13 09:48:44.121519 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.84 GiB.
2021.12.13 09:48:44.121984 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_2_2_0 to 202112_2_2_0.
2021.12.13 09:48:44.122146 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 11
2021.12.13 09:48:44.136765 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 16
2021.12.13 09:48:44.145933 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.84 GiB.
2021.12.13 09:48:44.148862 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_2_2_0 to 202112_2_2_0.
2021.12.13 09:48:44.149875 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 16
2021.12.13 09:48:44.422946 [ 143 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:48:44.423146 [ 143 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:48:45.000169 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 371.79 MiB, peak 375.79 MiB, will set to 375.24 MiB (RSS), difference: 3.45 MiB
2021.12.13 09:48:50.000631 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 375.25 MiB, peak 376.25 MiB, will set to 368.60 MiB (RSS), difference: -6.64 MiB
2021.12.13 09:48:50.126403 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 10444
2021.12.13 09:48:50.127959 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:48:50.129079 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_3_3_0 to 202112_3_3_0.
2021.12.13 09:48:50.129300 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 10444
2021.12.13 09:48:51.622327 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 13
2021.12.13 09:48:51.623809 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:48:51.624172 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_3_3_0 to 202112_3_3_0.
2021.12.13 09:48:51.624312 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 13
2021.12.13 09:48:51.650025 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 23
2021.12.13 09:48:51.659720 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:48:51.662945 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_3_3_0 to 202112_3_3_0.
2021.12.13 09:48:51.664104 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 23
2021.12.13 09:48:52.000259 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 369.35 MiB, peak 376.25 MiB, will set to 370.55 MiB (RSS), difference: 1.20 MiB
2021.12.13 09:48:57.129735 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 13895
2021.12.13 09:48:57.132458 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:48:57.134734 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_4_4_0 to 202112_4_4_0.
2021.12.13 09:48:57.135150 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 13895
2021.12.13 09:48:58.000590 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 370.41 MiB, peak 376.25 MiB, will set to 372.41 MiB (RSS), difference: 2.00 MiB
2021.12.13 09:48:59.164746 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 31
2021.12.13 09:48:59.189615 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:48:59.193450 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_4_4_0 to 202112_4_4_0.
2021.12.13 09:48:59.194762 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 31
2021.12.13 09:48:59.423342 [ 134 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:48:59.423467 [ 134 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:48:59.893655 [ 93 ] {} <Trace> TCPHandlerFactory: TCP Request. Address: 172.22.0.2:38264
2021.12.13 09:48:59.893781 [ 93 ] {} <Debug> TCPHandler: Connected ClickHouse client version 21.10.0, revision: 54449, user: default.
2021.12.13 09:48:59.893804 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Authenticating user 'default' from 172.22.0.2:38264
2021.12.13 09:48:59.893819 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db
2021.12.13 09:48:59.893889 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Creating session context with user_id: 94309d50-4f52-5250-31bd-74fecac179db
2021.12.13 09:48:59.893966 [ 93 ] {} <Trace> ContextAccess (default): Settings: readonly=0, allow_ddl=true, allow_introspection_functions=false
2021.12.13 09:48:59.893984 [ 93 ] {} <Trace> ContextAccess (default): List of all grants: GRANT SHOW, SELECT, INSERT, ALTER, CREATE, DROP, TRUNCATE, OPTIMIZE, KILL QUERY, MOVE PARTITION BETWEEN SHARDS, SYSTEM, dictGet, INTROSPECTION, SOURCES ON *.*
2021.12.13 09:48:59.893991 [ 93 ] {} <Trace> ContextAccess (default): List of all grants including implicit: GRANT SHOW, SELECT, INSERT, ALTER, CREATE, DROP, TRUNCATE, OPTIMIZE, KILL QUERY, MOVE PARTITION BETWEEN SHARDS, SYSTEM, dictGet, INTROSPECTION, SOURCES ON *.*
2021.12.13 09:48:59.895876 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2021.12.13 09:48:59.896162 [ 93 ] {dd3af264-3bef-4a63-83cf-0fdf7876e3a8} <Debug> executeQuery: (from 172.22.0.2:38264) -----------------------------------------------------------------------------
 -- Table I
 -----------------------------------------------------------------------------
 CREATE TABLE table_i ( field_a String, field_c UInt64 ) ENGINE = MergeTree ORDER BY field_a;
2021.12.13 09:48:59.896210 [ 93 ] {dd3af264-3bef-4a63-83cf-0fdf7876e3a8} <Trace> ContextAccess (default): Access granted: CREATE TABLE ON default.table_i
2021.12.13 09:48:59.900255 [ 93 ] {dd3af264-3bef-4a63-83cf-0fdf7876e3a8} <Debug> default.table_i (58b05ca3-5e49-4d5e-98b0-5ca35e498d5e): Loading data parts
2021.12.13 09:48:59.900489 [ 93 ] {dd3af264-3bef-4a63-83cf-0fdf7876e3a8} <Debug> default.table_i (58b05ca3-5e49-4d5e-98b0-5ca35e498d5e): There are no data parts
2021.12.13 09:48:59.902986 [ 93 ] {dd3af264-3bef-4a63-83cf-0fdf7876e3a8} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2021.12.13 09:48:59.903085 [ 93 ] {} <Debug> TCPHandler: Processed in 0.0072861 sec.
2021.12.13 09:48:59.903564 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2021.12.13 09:48:59.903737 [ 93 ] {6d23610c-1316-4646-b759-9130b9176ff0} <Debug> executeQuery: (from 172.22.0.2:38264) CREATE TABLE table_i_queue ( field_a String, field_c UInt64 ) ENGINE = Kafka() SETTINGS kafka_broker_list = 'kafka:9092', kafka_topic_list = 'topic_i', kafka_group_name = 'click-house', kafka_format = 'JSONEachRow', kafka_skip_broken_messages = 100, input_format_null_as_default = 1, input_format_skip_unknown_fields = 1;
2021.12.13 09:48:59.903771 [ 93 ] {6d23610c-1316-4646-b759-9130b9176ff0} <Trace> ContextAccess (default): Access granted: CREATE TABLE ON default.table_i_queue
2021.12.13 09:48:59.903876 [ 93 ] {6d23610c-1316-4646-b759-9130b9176ff0} <Information> BackgroundSchedulePool/BgMBSchPool: Create BackgroundSchedulePool with 16 threads
2021.12.13 09:48:59.907791 [ 93 ] {6d23610c-1316-4646-b759-9130b9176ff0} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2021.12.13 09:48:59.907895 [ 93 ] {} <Debug> TCPHandler: Processed in 0.0044102 sec.
2021.12.13 09:48:59.908257 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2021.12.13 09:48:59.908422 [ 93 ] {8f3b1b21-7508-441c-8769-cb29150f4b49} <Debug> executeQuery: (from 172.22.0.2:38264) CREATE MATERIALIZED VIEW table_i_mv TO table_i AS SELECT field_a, field_c FROM table_i_queue;
2021.12.13 09:48:59.908455 [ 93 ] {8f3b1b21-7508-441c-8769-cb29150f4b49} <Trace> ContextAccess (default): Access granted: CREATE VIEW ON default.table_i_mv
2021.12.13 09:48:59.908461 [ 93 ] {8f3b1b21-7508-441c-8769-cb29150f4b49} <Trace> ContextAccess (default): Access granted: SELECT, INSERT ON default.table_i
2021.12.13 09:48:59.908591 [ 93 ] {8f3b1b21-7508-441c-8769-cb29150f4b49} <Trace> ContextAccess (default): Access granted: SELECT(field_a, field_c) ON default.table_i_queue
2021.12.13 09:48:59.910588 [ 93 ] {8f3b1b21-7508-441c-8769-cb29150f4b49} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2021.12.13 09:48:59.910694 [ 93 ] {} <Debug> TCPHandler: Processed in 0.0024758 sec.
2021.12.13 09:48:59.911089 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2021.12.13 09:48:59.911248 [ 93 ] {187a3403-83fd-4c52-8c56-b4f3fe088413} <Debug> executeQuery: (from 172.22.0.2:38264) -----------------------------------------------------------------------------
 -- Table II
 -----------------------------------------------------------------------------
 CREATE TABLE table_ii ( field_b String, field_c UInt64, field_datetime DateTime ) ENGINE = MergeTree ORDER BY field_c;
2021.12.13 09:48:59.911280 [ 93 ] {187a3403-83fd-4c52-8c56-b4f3fe088413} <Trace> ContextAccess (default): Access granted: CREATE TABLE ON default.table_ii
2021.12.13 09:48:59.913628 [ 93 ] {187a3403-83fd-4c52-8c56-b4f3fe088413} <Debug> default.table_ii (bbb24b5a-f035-4e0c-bbb2-4b5af035de0c): Loading data parts
2021.12.13 09:48:59.913930 [ 93 ] {187a3403-83fd-4c52-8c56-b4f3fe088413} <Debug> default.table_ii (bbb24b5a-f035-4e0c-bbb2-4b5af035de0c): There are no data parts
2021.12.13 09:48:59.916062 [ 93 ] {187a3403-83fd-4c52-8c56-b4f3fe088413} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2021.12.13 09:48:59.916162 [ 93 ] {} <Debug> TCPHandler: Processed in 0.0051304 sec.
2021.12.13 09:48:59.916646 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2021.12.13 09:48:59.916900 [ 93 ] {43c0844e-8b37-4f80-b1c2-bd656101da68} <Debug> executeQuery: (from 172.22.0.2:38264) CREATE TABLE table_ii_queue ( field_c UInt64, field_b String, field_datetime_raw String ) ENGINE = Kafka() SETTINGS kafka_broker_list = 'kafka:9092', kafka_topic_list = 'topic_ii', kafka_group_name = 'click-house', kafka_format = 'JSONEachRow', kafka_skip_broken_messages = 100, input_format_null_as_default = 1, input_format_skip_unknown_fields = 1;
2021.12.13 09:48:59.916951 [ 93 ] {43c0844e-8b37-4f80-b1c2-bd656101da68} <Trace> ContextAccess (default): Access granted: CREATE TABLE ON default.table_ii_queue
2021.12.13 09:48:59.919532 [ 93 ] {43c0844e-8b37-4f80-b1c2-bd656101da68} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2021.12.13 09:48:59.919617 [ 93 ] {} <Debug> TCPHandler: Processed in 0.0030459 sec.
2021.12.13 09:48:59.920078 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2021.12.13 09:48:59.920328 [ 93 ] {cc83670f-7326-4737-8f90-d6f89b6a77bd} <Debug> executeQuery: (from 172.22.0.2:38264) CREATE MATERIALIZED VIEW table_ii_mv TO table_ii AS SELECT field_c as field_c, field_b as field_b, parseDateTimeBestEffort(field_datetime_raw) as field_datetime FROM table_ii_queue;
2021.12.13 09:48:59.920366 [ 93 ] {cc83670f-7326-4737-8f90-d6f89b6a77bd} <Trace> ContextAccess (default): Access granted: CREATE VIEW ON default.table_ii_mv
2021.12.13 09:48:59.920373 [ 93 ] {cc83670f-7326-4737-8f90-d6f89b6a77bd} <Trace> ContextAccess (default): Access granted: SELECT, INSERT ON default.table_ii
2021.12.13 09:48:59.920553 [ 93 ] {cc83670f-7326-4737-8f90-d6f89b6a77bd} <Trace> ContextAccess (default): Access granted: SELECT(field_c, field_b, field_datetime_raw) ON default.table_ii_queue
2021.12.13 09:48:59.922889 [ 93 ] {cc83670f-7326-4737-8f90-d6f89b6a77bd} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2021.12.13 09:48:59.922970 [ 93 ] {} <Debug> TCPHandler: Processed in 0.0029477 sec.
2021.12.13 09:48:59.923169 [ 93 ] {} <Debug> TCPHandler: Done processing connection.
2021.12.13 09:48:59.923196 [ 93 ] {} <Debug> TCP-Session: 95f5efa9-639b-4155-95f5-efa9639b9155 Destroying unnamed session of user 94309d50-4f52-5250-31bd-74fecac179db
2021.12.13 09:48:59.954852 [ 93 ] {} <Trace> TCPHandlerFactory: TCP Request. Address: 172.22.0.2:38270
2021.12.13 09:48:59.954928 [ 93 ] {} <Debug> TCPHandler: Connected ClickHouse client version 21.10.0, revision: 54449, user: default.
2021.12.13 09:48:59.954940 [ 93 ] {} <Debug> TCP-Session: bfd0d818-427c-4e22-bfd0-d818427c0e22 Authenticating user 'default' from 172.22.0.2:38270
2021.12.13 09:48:59.954950 [ 93 ] {} <Debug> TCP-Session: bfd0d818-427c-4e22-bfd0-d818427c0e22 Authenticated with global context as user 94309d50-4f52-5250-31bd-74fecac179db
2021.12.13 09:48:59.954998 [ 93 ] {} <Debug> TCP-Session: bfd0d818-427c-4e22-bfd0-d818427c0e22 Creating session context with user_id: 94309d50-4f52-5250-31bd-74fecac179db
2021.12.13 09:48:59.956908 [ 93 ] {} <Debug> TCP-Session: bfd0d818-427c-4e22-bfd0-d818427c0e22 Creating query context from session context, user_id: 94309d50-4f52-5250-31bd-74fecac179db, parent context user: default
2021.12.13 09:48:59.957368 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> executeQuery: (from 172.22.0.2:38270) -----------------------------------------------------------------------------
 -- View That Breaks Everything
 -----------------------------------------------------------------------------
 CREATE MATERIALIZED VIEW causing_problems_mv ENGINE=ReplacingMergeTree(max_field_datetime) ORDER BY (field_b, field_a) POPULATE AS SELECT field_a, field_b, argMax(field_c, field_datetime) as field_c, max(field_datetime) as max_field_datetime FROM ( SELECT field_a, field_b, field_c, field_datetime FROM table_ii LEFT JOIN table_i USING field_c ) GROUP BY (field_b, field_a); 
2021.12.13 09:48:59.957416 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: CREATE VIEW ON default.causing_problems_mv
2021.12.13 09:48:59.957812 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: SELECT(field_a, field_c) ON default.table_i
2021.12.13 09:48:59.957903 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:48:59.957916 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:48:59.957921 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:48:59.957975 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: SELECT(field_b, field_c, field_datetime) ON default.table_ii
2021.12.13 09:48:59.958197 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: SELECT(field_a, field_c) ON default.table_i
2021.12.13 09:48:59.958245 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:48:59.958253 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:48:59.958257 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:48:59.958303 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: SELECT(field_b, field_c, field_datetime) ON default.table_ii
2021.12.13 09:48:59.962359 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> default.`.inner_id.79e821e5-12ef-4f58-b9e8-21e512efef58` (69aeb251-12eb-4d1d-a9ae-b25112eb5d1d): Loading data parts
2021.12.13 09:48:59.962533 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> default.`.inner_id.79e821e5-12ef-4f58-b9e8-21e512efef58` (69aeb251-12eb-4d1d-a9ae-b25112eb5d1d): There are no data parts
2021.12.13 09:48:59.968323 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: INSERT(field_a, field_b, field_c, max_field_datetime) ON default.causing_problems_mv
2021.12.13 09:48:59.968756 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: SELECT(field_a, field_c) ON default.table_i
2021.12.13 09:48:59.968823 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2021.12.13 09:48:59.968905 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:48:59.968918 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:48:59.968924 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:48:59.968982 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> ContextAccess (default): Access granted: SELECT(field_b, field_c, field_datetime) ON default.table_ii
2021.12.13 09:48:59.969213 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2021.12.13 09:48:59.969242 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> JoiningTransform: Before join block: 'field_b String String(size = 0), field_c UInt64 UInt64(size = 0), field_datetime DateTime UInt32(size = 0)'
2021.12.13 09:48:59.969264 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> JoiningTransform: After join block: 'field_b String String(size = 0), field_c UInt64 UInt64(size = 0), field_datetime DateTime UInt32(size = 0), field_a String String(size = 0)'
2021.12.13 09:48:59.969287 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2021.12.13 09:48:59.969443 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> JoiningTransform: Before join block: 'field_b String String(size = 0), field_c UInt64 UInt64(size = 0), field_datetime DateTime UInt32(size = 0)'
2021.12.13 09:48:59.969459 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> JoiningTransform: After join block: 'field_b String String(size = 0), field_c UInt64 UInt64(size = 0), field_datetime DateTime UInt32(size = 0), field_a String String(size = 0)'
2021.12.13 09:48:59.969971 [ 265 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> AggregatingTransform: Aggregated. 0 to 0 rows (from 0.00 B) in 0.0004565 sec. (0.000 rows/sec., 0.00 B/sec.)
2021.12.13 09:48:59.969988 [ 265 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Trace> Aggregator: Merging aggregated data
2021.12.13 09:48:59.970136 [ 93 ] {3c32cb87-8846-4d8b-be0d-41403d1f065e} <Debug> MemoryTracker: Peak memory usage (for query): 0.00 B.
2021.12.13 09:48:59.970405 [ 93 ] {} <Debug> TCPHandler: Processed in 0.0136453 sec.
2021.12.13 09:48:59.970449 [ 93 ] {} <Debug> TCPHandler: Done processing connection.
2021.12.13 09:48:59.970471 [ 93 ] {} <Debug> TCP-Session: bfd0d818-427c-4e22-bfd0-d818427c0e22 Destroying unnamed session of user 94309d50-4f52-5250-31bd-74fecac179db
2021.12.13 09:49:00.000370 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 372.83 MiB, peak 376.48 MiB, will set to 369.50 MiB (RSS), difference: -3.33 MiB
2021.12.13 09:49:00.408035 [ 246 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:00.408873 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: []
2021.12.13 09:49:00.408899 [ 246 ] {} <Trace> StorageKafka (table_i_queue): No assignment
2021.12.13 09:49:00.420277 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:00.421418 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:00.421462 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:00.421504 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:00.421885 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:00.421912 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:00.421919 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:00.422984 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:00.923378 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:00.925574 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:00.925662 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:00.925703 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:00.927057 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:00.927112 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:00.927135 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:00.929397 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:01.430116 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:01.431669 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:01.431712 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:01.431725 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:01.432351 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:01.432379 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:01.432409 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:01.433667 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:01.934544 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:01.937442 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:01.937500 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:01.937520 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:01.938650 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:01.938706 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:01.938777 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:01.941368 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:02.000130 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 370.33 MiB, peak 376.48 MiB, will set to 372.32 MiB (RSS), difference: 2.00 MiB
2021.12.13 09:49:02.441687 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:02.442200 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:02.442214 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:02.442218 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:02.442402 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:02.442411 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:02.442415 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:02.442881 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:02.943192 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:02.943759 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:02.943774 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:02.943779 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:02.943976 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:02.943985 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:02.943989 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:02.944440 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:03.444728 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:03.445370 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:03.445393 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:03.445399 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:03.445647 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:03.445659 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:03.445663 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:03.446191 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:03.946428 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:03.947311 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:03.947339 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:03.947348 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:03.947706 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:03.947722 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:03.947729 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:03.948428 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:03.986348 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Topics/partitions assigned: [ topic_i[0:#] ]
2021.12.13 09:49:04.135784 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 17346
2021.12.13 09:49:04.136600 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:04.137249 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_5_5_0 to 202112_5_5_0.
2021.12.13 09:49:04.137394 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 17346
2021.12.13 09:49:04.411315 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Polled batch of 2 messages. Offsets position: [ topic_i[0:2] ]
2021.12.13 09:49:04.449054 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:04.449990 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:04.450021 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:04.450030 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:04.450395 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:04.450412 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:04.450422 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:04.451164 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:04.911721 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:04.951988 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:04.952727 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:04.952752 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:04.952760 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:04.953000 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:04.953012 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:04.953016 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:04.953527 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:05.412087 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:05.454090 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:05.454725 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:05.454746 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:05.454752 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:05.454972 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:05.454983 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:05.454987 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:05.455474 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:05.912381 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:05.955672 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:05.956181 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:05.956195 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:05.956199 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:05.956399 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:05.956408 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:05.956412 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:05.956830 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:06.412775 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:06.457737 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:06.460632 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:06.460702 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:06.460727 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:06.462205 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:06.462266 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:06.462287 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:06.465908 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:06.613680 [ 101 ] {} <Trace> SystemLog (system.query_log): Flushing system log, 14 entries to flush up to offset 14
2021.12.13 09:49:06.613718 [ 102 ] {} <Trace> SystemLog (system.query_thread_log): Flushing system log, 8 entries to flush up to offset 8
2021.12.13 09:49:06.613758 [ 101 ] {} <Debug> SystemLog (system.query_log): Creating new table system.query_log for QueryLog
2021.12.13 09:49:06.613786 [ 102 ] {} <Debug> SystemLog (system.query_thread_log): Creating new table system.query_thread_log for QueryThreadLog
2021.12.13 09:49:06.613797 [ 104 ] {} <Trace> SystemLog (system.session_log): Flushing system log, 4 entries to flush up to offset 4
2021.12.13 09:49:06.613852 [ 104 ] {} <Debug> SystemLog (system.session_log): Creating new table system.session_log for SessionLog
2021.12.13 09:49:06.620658 [ 102 ] {} <Debug> system.query_thread_log (fd7fb517-fe7c-40f5-bd7f-b517fe7c80f5): Loading data parts
2021.12.13 09:49:06.620680 [ 104 ] {} <Debug> system.session_log (ca09d8b5-3a47-41d2-8a09-d8b53a47b1d2): Loading data parts
2021.12.13 09:49:06.621366 [ 104 ] {} <Debug> system.session_log (ca09d8b5-3a47-41d2-8a09-d8b53a47b1d2): There are no data parts
2021.12.13 09:49:06.621427 [ 102 ] {} <Debug> system.query_thread_log (fd7fb517-fe7c-40f5-bd7f-b517fe7c80f5): There are no data parts
2021.12.13 09:49:06.624233 [ 101 ] {} <Debug> system.query_log (dac42e1d-1237-4770-9ac4-2e1d1237a770): Loading data parts
2021.12.13 09:49:06.624863 [ 101 ] {} <Debug> system.query_log (dac42e1d-1237-4770-9ac4-2e1d1237a770): There are no data parts
2021.12.13 09:49:06.627476 [ 104 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:06.627696 [ 102 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:06.627931 [ 104 ] {} <Trace> system.session_log (ca09d8b5-3a47-41d2-8a09-d8b53a47b1d2): Renaming temporary part tmp_insert_202112_1_1_0 to 202112_1_1_0.
2021.12.13 09:49:06.628107 [ 104 ] {} <Trace> SystemLog (system.session_log): Flushed system log up to offset 4
2021.12.13 09:49:06.630038 [ 102 ] {} <Trace> system.query_thread_log (fd7fb517-fe7c-40f5-bd7f-b517fe7c80f5): Renaming temporary part tmp_insert_202112_1_1_0 to 202112_1_1_0.
2021.12.13 09:49:06.630258 [ 102 ] {} <Trace> SystemLog (system.query_thread_log): Flushed system log up to offset 8
2021.12.13 09:49:06.630300 [ 101 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:06.631126 [ 101 ] {} <Trace> system.query_log (dac42e1d-1237-4770-9ac4-2e1d1237a770): Renaming temporary part tmp_insert_202112_1_1_0 to 202112_1_1_0.
2021.12.13 09:49:06.631340 [ 101 ] {} <Trace> SystemLog (system.query_log): Flushed system log up to offset 14
2021.12.13 09:49:06.694921 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 38
2021.12.13 09:49:06.703135 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:06.706008 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_5_5_0 to 202112_5_5_0.
2021.12.13 09:49:06.707181 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 38
2021.12.13 09:49:06.912921 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:06.966775 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:06.967440 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:06.967459 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:06.967465 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:06.967722 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:06.967737 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:06.967741 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:06.968229 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:07.000355 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 374.26 MiB, peak 378.26 MiB, will set to 379.34 MiB (RSS), difference: 5.08 MiB
2021.12.13 09:49:07.413266 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:07.468636 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:07.469306 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:07.469326 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:07.469332 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:07.469583 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:07.469594 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:07.469599 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:07.470020 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:07.913796 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:07.914043 [ 246 ] {} <Trace> InterpreterSelectQuery: FetchColumns -> Complete
2021.12.13 09:49:07.914264 [ 246 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:07.914837 [ 246 ] {} <Trace> default.table_i (58b05ca3-5e49-4d5e-98b0-5ca35e498d5e): Renaming temporary part tmp_insert_all_1_1_0 to all_1_1_0.
2021.12.13 09:49:07.914971 [ 246 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:07.915152 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:07.923331 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Committed offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:07.923356 [ 246 ] {} <Debug> StorageKafka (table_i_queue): Pushing 2.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 7515 ms.
2021.12.13 09:49:07.923411 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:07.923439 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Execution took 7515 ms.
2021.12.13 09:49:07.970303 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:07.970927 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:07.970941 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:07.970946 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:07.971168 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:07.971178 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:07.971182 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:07.971643 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:08.000152 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 379.31 MiB, peak 379.34 MiB, will set to 383.35 MiB (RSS), difference: 4.05 MiB
2021.12.13 09:49:08.423881 [ 247 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:08.425285 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:08.425335 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:08.471898 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:08.473065 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:08.473095 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:08.473105 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:08.473521 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:08.473542 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:08.473550 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:08.474856 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:08.926303 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:08.975387 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:08.976796 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:08.976810 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:08.976815 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:08.977030 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:08.977041 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:08.977045 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:08.977540 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:09.000123 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 383.35 MiB, peak 383.35 MiB, will set to 384.63 MiB (RSS), difference: 1.28 MiB
2021.12.13 09:49:09.426667 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:09.477910 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:09.479190 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:09.479217 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:09.479229 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:09.479747 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:09.479768 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:09.479779 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:09.481248 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:09.927215 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:09.982281 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:09.984380 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:09.984460 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:09.984480 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:09.985361 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:09.985407 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:09.985423 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:09.987114 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:10.000636 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 384.63 MiB, peak 384.63 MiB, will set to 387.13 MiB (RSS), difference: 2.50 MiB
2021.12.13 09:49:10.427810 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:10.487586 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:10.489100 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:10.489135 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:10.489150 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:10.489835 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:10.489865 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:10.489879 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:10.491146 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:10.928550 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:10.992009 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:10.994117 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:10.994167 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:10.994184 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:10.995028 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:10.995067 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:10.995082 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:10.996824 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:11.137632 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 20797
2021.12.13 09:49:11.138629 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:11.139404 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_6_6_0 to 202112_6_6_0.
2021.12.13 09:49:11.139549 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 20797
2021.12.13 09:49:11.139614 [ 113 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Selected 6 parts from 202112_1_1_0 to 202112_6_6_0
2021.12.13 09:49:11.139638 [ 113 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:11.139827 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_1_0 to 202112_6_6_0 into Compact
2021.12.13 09:49:11.139871 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:49:11.139910 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_1_0, total 3540 rows starting from the beginning of the part
2021.12.13 09:49:11.140015 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_2_2_0, total 3453 rows starting from the beginning of the part
2021.12.13 09:49:11.140105 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_3_3_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:11.140171 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_4_4_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:11.140225 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_5_5_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:11.140285 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_6_6_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:11.143338 [ 79 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 20797 rows, containing 5 columns (5 merged, 0 gathered) in 0.0035824 sec., 5805326.038410004 rows/sec., 155.18 MiB/sec.
2021.12.13 09:49:11.143701 [ 79 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_merge_202112_1_6_1 to 202112_1_6_1.
2021.12.13 09:49:11.143765 [ 79 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_6_1} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Merged 6 parts: from 202112_1_1_0 to 202112_6_6_0
2021.12.13 09:49:11.143818 [ 79 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.00 MiB.
2021.12.13 09:49:11.429216 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:11.497288 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:11.498245 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:11.498272 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:11.498281 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:11.498624 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:11.498639 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:11.498647 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:11.499474 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:11.929569 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:12.000019 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:12.000222 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 391.08 MiB, peak 391.13 MiB, will set to 388.17 MiB (RSS), difference: -2.91 MiB
2021.12.13 09:49:12.001496 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:12.001544 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:12.001557 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:12.002423 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:12.002456 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:12.002469 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:12.003670 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:12.429796 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:12.504031 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:12.505186 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:12.505222 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:12.505233 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:12.505755 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:12.505780 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:12.505791 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:12.506803 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:12.930258 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:13.007251 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:13.009427 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:13.009485 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:13.009508 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:13.010587 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:13.010638 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:13.010658 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:13.012806 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:13.430660 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:13.430741 [ 247 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:13.430923 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:13.430932 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:13.430940 [ 247 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5007 ms.
2021.12.13 09:49:13.430999 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:13.431027 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5007 ms.
2021.12.13 09:49:13.513412 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:13.515456 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:13.515511 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:13.515531 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:13.516451 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:13.516494 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:13.516512 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:13.518255 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:13.931615 [ 256 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:13.933873 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:13.933941 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:14.019058 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:14.021041 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:14.021094 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:14.021117 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:14.022080 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:14.022122 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:14.022139 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:14.023993 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:14.114077 [ 95 ] {} <Trace> SystemLog (system.part_log): Flushing system log, 1 entries to flush up to offset 1
2021.12.13 09:49:14.114119 [ 95 ] {} <Debug> SystemLog (system.part_log): Creating new table system.part_log for PartLog
2021.12.13 09:49:14.120698 [ 95 ] {} <Debug> system.part_log (30dc6da9-431d-45a6-b0dc-6da9431dc5a6): Loading data parts
2021.12.13 09:49:14.120911 [ 95 ] {} <Debug> system.part_log (30dc6da9-431d-45a6-b0dc-6da9431dc5a6): There are no data parts
2021.12.13 09:49:14.124289 [ 95 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:14.124856 [ 95 ] {} <Trace> system.part_log (30dc6da9-431d-45a6-b0dc-6da9431dc5a6): Renaming temporary part tmp_insert_202112_1_1_0 to 202112_1_1_0.
2021.12.13 09:49:14.124873 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 10 entries to flush up to offset 23
2021.12.13 09:49:14.124995 [ 95 ] {} <Trace> SystemLog (system.part_log): Flushed system log up to offset 1
2021.12.13 09:49:14.125272 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:14.125637 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_4_4_0 to 202112_4_4_0.
2021.12.13 09:49:14.125766 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 23
2021.12.13 09:49:14.207351 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 46
2021.12.13 09:49:14.216030 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:14.218234 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_6_6_0 to 202112_6_6_0.
2021.12.13 09:49:14.218491 [ 127 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Selected 6 parts from 202112_1_1_0 to 202112_6_6_0
2021.12.13 09:49:14.218526 [ 127 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:14.218686 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_1_0 to 202112_6_6_0 into Compact
2021.12.13 09:49:14.218913 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:49:14.219154 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 46
2021.12.13 09:49:14.219426 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_1_0, total 8 rows starting from the beginning of the part
2021.12.13 09:49:14.220838 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_2_2_0, total 8 rows starting from the beginning of the part
2021.12.13 09:49:14.222357 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_3_3_0, total 7 rows starting from the beginning of the part
2021.12.13 09:49:14.223719 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_4_4_0, total 8 rows starting from the beginning of the part
2021.12.13 09:49:14.224994 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_5_5_0, total 7 rows starting from the beginning of the part
2021.12.13 09:49:14.226228 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_6_6_0, total 8 rows starting from the beginning of the part
2021.12.13 09:49:14.238007 [ 77 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 46 rows, containing 313 columns (313 merged, 0 gathered) in 0.0193752 sec., 2374.1690408357076 rows/sec., 5.65 MiB/sec.
2021.12.13 09:49:14.239248 [ 79 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_merge_202112_1_6_1 to 202112_1_6_1.
2021.12.13 09:49:14.239529 [ 79 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_6_1} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Merged 6 parts: from 202112_1_1_0 to 202112_6_6_0
2021.12.13 09:49:14.239857 [ 79 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.17 MiB.
2021.12.13 09:49:14.423906 [ 194 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:49:14.424267 [ 194 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:49:14.435256 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:14.524434 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:14.525564 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:14.525597 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:14.525608 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:14.526089 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:14.526110 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:14.526120 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:14.527054 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:14.935566 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:15.027298 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:15.027816 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:15.027828 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:15.027833 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:15.028076 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:15.028085 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:15.028100 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:15.028489 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:15.435920 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:15.529132 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:15.530530 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:15.530571 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:15.530585 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:15.531299 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:15.531331 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:15.531344 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:15.532572 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:15.936406 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:16.032957 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:16.033441 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:16.033452 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:16.033458 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:16.033648 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:16.033656 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:16.033661 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:16.034116 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:16.437145 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:16.534600 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:16.535290 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:16.535311 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:16.535319 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:16.535672 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:16.535690 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:16.535697 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:16.536248 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:16.937473 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:17.036450 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:17.037021 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:17.037034 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:17.037039 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:17.037232 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:17.037242 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:17.037246 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:17.037642 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:17.437671 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:17.537828 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:17.538396 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:17.538422 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:17.538431 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:17.538712 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:17.538724 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:17.538730 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:17.539298 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:17.938066 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:18.039679 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:18.040973 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:18.041008 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:18.041024 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:18.041763 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:18.041793 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:18.041808 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:18.043260 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:18.146410 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 24248
2021.12.13 09:49:18.149719 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:18.152188 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_7_7_0 to 202112_7_7_0.
2021.12.13 09:49:18.152548 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 24248
2021.12.13 09:49:18.438856 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:18.543802 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:18.545918 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:18.545976 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:18.545999 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:18.547046 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:18.547095 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:18.547116 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:18.549064 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:18.939133 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:18.939374 [ 256 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:18.939891 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:18.939930 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:18.939957 [ 256 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5008 ms.
2021.12.13 09:49:18.940113 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:18.940217 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5008 ms.
2021.12.13 09:49:19.000244 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 389.41 MiB, peak 393.45 MiB, will set to 383.88 MiB (RSS), difference: -5.53 MiB
2021.12.13 09:49:19.049964 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:19.051693 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:19.051741 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:19.051759 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:19.052567 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:19.052791 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:19.052846 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:19.054444 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:19.440381 [ 253 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:19.441235 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:19.441258 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:19.555170 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:19.557470 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:19.557526 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:19.557548 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:19.558664 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:19.558720 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:19.558740 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:19.560750 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:19.941870 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:20.061151 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:20.062453 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:20.062486 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:20.062500 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:20.063143 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:20.063173 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:20.063213 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:20.064397 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:20.442349 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:20.565325 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:20.567607 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:20.567668 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:20.567690 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:20.568841 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:20.568955 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:20.568983 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:20.570961 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:20.942860 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:21.071898 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:21.074292 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:21.074361 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:21.074384 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:21.075547 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:21.075603 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:21.075624 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:21.076956 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:21.443307 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:21.577643 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:21.579847 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:21.579903 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:21.579925 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:21.581159 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:21.581210 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:21.581230 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:21.583341 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:21.626225 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 25
2021.12.13 09:49:21.626719 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:21.627417 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_5_5_0 to 202112_5_5_0.
2021.12.13 09:49:21.627645 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 25
2021.12.13 09:49:21.719462 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 53
2021.12.13 09:49:21.743602 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:21.747434 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_7_7_0 to 202112_7_7_0.
2021.12.13 09:49:21.748807 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 53
2021.12.13 09:49:21.944126 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:22.000654 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 383.88 MiB, peak 393.45 MiB, will set to 389.29 MiB (RSS), difference: 5.41 MiB
2021.12.13 09:49:22.083820 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:22.084877 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:22.084906 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:22.084935 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:22.085463 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:22.085487 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:22.085497 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:22.086459 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:22.444525 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:22.586844 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:22.587868 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:22.587899 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:22.587910 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:22.588333 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:22.588352 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:22.588361 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:22.589239 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:22.944908 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:23.089694 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:23.091903 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:23.091967 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:23.091990 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:23.093164 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:23.093217 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:23.093291 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:23.095231 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:23.445184 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:23.595983 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:23.598189 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:23.598245 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:23.598267 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:23.599397 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:23.599447 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:23.599468 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:23.601040 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:23.945731 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:24.101913 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:24.104398 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:24.104465 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:24.104487 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:24.105564 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:24.105615 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:24.105636 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:24.107556 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:24.446458 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:24.446574 [ 253 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:24.446868 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:24.446888 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:24.446898 [ 253 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:49:24.446962 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:24.447008 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:49:24.608241 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:24.608930 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:24.608954 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:24.608960 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:24.609244 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:24.609256 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:24.609261 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:24.609779 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:24.947429 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:24.948216 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:24.948245 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:25.110337 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:25.112905 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:25.112971 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:25.113027 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:25.114124 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:25.114173 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:25.114194 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:25.116168 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:25.152754 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 27699
2021.12.13 09:49:25.153542 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:25.154023 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_8_8_0 to 202112_8_8_0.
2021.12.13 09:49:25.154143 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 27699
2021.12.13 09:49:25.449251 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:25.616697 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:25.617676 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:25.617706 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:25.617716 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:25.618139 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:25.618158 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:25.618166 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:25.618915 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:25.949994 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:26.119293 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:26.120098 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:26.120131 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:26.120139 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:26.120505 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:26.120525 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:26.120532 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:26.121206 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:26.450194 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:26.621505 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:26.622139 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:26.622156 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:26.622161 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:26.622388 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:26.622397 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:26.622401 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:26.622934 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:26.950520 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:27.123772 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:27.126056 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:27.126121 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:27.126145 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:27.127241 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:27.127334 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:27.127356 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:27.129357 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:27.451058 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:27.630112 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:27.631589 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:27.631632 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:27.631647 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:27.632360 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:27.632392 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:27.632406 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:27.633734 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:27.951563 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:28.134416 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:28.136708 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:28.136769 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:28.136792 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:28.138065 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:28.138118 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:28.138142 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:28.140147 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:28.452573 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:28.640709 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:28.643335 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:28.643398 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:28.643422 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:28.644851 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:28.644909 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:28.644931 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:28.647119 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:28.953351 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:29.147622 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:29.149343 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:29.149390 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:29.149407 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:29.150250 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:29.150288 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:29.150304 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:29.151845 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:29.248957 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 61
2021.12.13 09:49:29.256648 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:29.259108 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_8_8_0 to 202112_8_8_0.
2021.12.13 09:49:29.260052 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 61
2021.12.13 09:49:29.425095 [ 138 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:49:29.425662 [ 138 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:49:29.454154 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:29.652453 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:29.653076 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:29.653100 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:29.653106 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:29.653428 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:29.653445 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:29.653450 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:29.653906 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:29.954601 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:29.954819 [ 245 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:29.955292 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:29.955380 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:29.955421 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5007 ms.
2021.12.13 09:49:29.955567 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:29.955667 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5008 ms.
2021.12.13 09:49:30.154792 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:30.156991 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:30.157082 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:30.157106 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:30.158216 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:30.158264 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:30.158284 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:30.160306 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:30.456144 [ 246 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:30.457530 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:30.457572 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:30.661113 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:30.661700 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:30.661719 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:30.661726 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:30.661990 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:30.662003 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:30.662008 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:30.662492 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:30.958118 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:31.162763 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:31.163622 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:31.163642 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:31.163665 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:31.164044 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:31.164061 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:31.164069 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:31.164814 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:31.458507 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:31.665648 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:31.667090 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:31.667132 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:31.667146 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:31.668036 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:31.668077 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:31.668094 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:31.669800 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:31.959032 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:32.154927 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 31150
2021.12.13 09:49:32.158325 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:32.160643 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_9_9_0 to 202112_9_9_0.
2021.12.13 09:49:32.161154 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 31150
2021.12.13 09:49:32.170876 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:32.173514 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:32.173614 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:32.173637 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:32.174854 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:32.174905 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:32.174925 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:32.177402 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:32.287154 [ 194 ] {} <Debug> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3) (MergerMutator): Selected 5 parts from 202112_1_1_0 to 202112_5_5_0
2021.12.13 09:49:32.287211 [ 194 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:32.287449 [ 65 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTask::PrepareStage: Merging 5 parts: from 202112_1_1_0 to 202112_5_5_0 into Compact
2021.12.13 09:49:32.287562 [ 65 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:49:32.287642 [ 65 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_1_0, total 7 rows starting from the beginning of the part
2021.12.13 09:49:32.287923 [ 65 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_2_2_0, total 4 rows starting from the beginning of the part
2021.12.13 09:49:32.288128 [ 65 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_3_3_0, total 2 rows starting from the beginning of the part
2021.12.13 09:49:32.288306 [ 65 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_4_4_0, total 10 rows starting from the beginning of the part
2021.12.13 09:49:32.288401 [ 65 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_5_5_0, total 2 rows starting from the beginning of the part
2021.12.13 09:49:32.289907 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 25 rows, containing 10 columns (10 merged, 0 gathered) in 0.0025345 sec., 9863.878477017164 rows/sec., 2.02 MiB/sec.
2021.12.13 09:49:32.290614 [ 52 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_merge_202112_1_5_1 to 202112_1_5_1.
2021.12.13 09:49:32.290714 [ 52 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_5_1} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3) (MergerMutator): Merged 5 parts: from 202112_1_1_0 to 202112_5_5_0
2021.12.13 09:49:32.290794 [ 52 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.05 MiB.
2021.12.13 09:49:32.459363 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:32.677734 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:32.678538 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:32.678562 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:32.678571 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:32.678944 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:32.678961 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:32.678969 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:32.679706 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:32.959735 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:33.180343 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:33.181022 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:33.181042 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:33.181048 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:33.181362 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:33.181379 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:33.181385 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:33.181880 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:33.459979 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:33.682223 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:33.682870 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:33.682903 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:33.682910 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:33.683162 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:33.683173 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:33.683178 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:33.683624 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:33.960249 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:34.184280 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:34.184901 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:34.184922 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:34.184928 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:34.185289 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:34.185310 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:34.185315 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:34.185788 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:34.460824 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:34.686543 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:34.687964 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:34.687998 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:34.688010 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:34.688514 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:34.688554 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:34.688564 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:34.689509 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:34.961048 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:35.189687 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:35.190183 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:35.190196 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:35.190201 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:35.190416 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:35.190426 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:35.190430 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:35.190828 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:35.461357 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:35.461523 [ 246 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:35.461851 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:35.461876 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:35.461892 [ 246 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:49:35.461983 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:35.462044 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5005 ms.
2021.12.13 09:49:35.691520 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:35.693114 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:35.693179 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:35.693203 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:35.693920 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:35.693951 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:35.693966 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:35.695303 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:35.962627 [ 251 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:35.964443 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:35.964500 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:36.195556 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:36.196160 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:36.196182 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:36.196189 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:36.196447 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:36.196458 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:36.196463 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:36.197005 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:36.465429 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:36.628360 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 27
2021.12.13 09:49:36.629315 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:36.630118 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_6_6_0 to 202112_6_6_0.
2021.12.13 09:49:36.630421 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 27
2021.12.13 09:49:36.697554 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:36.698744 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:36.698807 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:36.698827 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:36.699323 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:36.699347 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:36.699357 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:36.700296 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:36.760225 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 68
2021.12.13 09:49:36.766868 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:36.768843 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_9_9_0 to 202112_9_9_0.
2021.12.13 09:49:36.769595 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 68
2021.12.13 09:49:36.966078 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:37.000195 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 390.54 MiB, peak 394.54 MiB, will set to 389.49 MiB (RSS), difference: -1.04 MiB
2021.12.13 09:49:37.201126 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:37.202861 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:37.202952 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:37.202989 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:37.203785 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:37.203822 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:37.203838 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:37.205378 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:37.466696 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:37.706172 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:37.708603 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:37.708671 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:37.708693 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:37.709802 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:37.709855 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:37.709876 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:37.713002 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:37.967045 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:38.213671 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:38.216171 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:38.216237 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:38.216269 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:38.217518 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:38.217572 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:38.217595 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:38.219700 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:38.467776 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:38.720351 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:38.722787 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:38.722848 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:38.722873 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:38.724084 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:38.724133 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:38.724154 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:38.726122 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:38.968280 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:39.161320 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 34601
2021.12.13 09:49:39.162088 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:39.162594 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_10_10_0 to 202112_10_10_0.
2021.12.13 09:49:39.162764 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 34601
2021.12.13 09:49:39.226850 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:39.228292 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:39.228335 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:39.228350 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:39.229043 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:39.229073 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:39.229087 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:39.230369 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:39.468732 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:39.731341 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:39.733661 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:39.733724 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:39.733746 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:39.734967 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:39.735032 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:39.735054 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:39.737023 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:39.969285 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:40.237651 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:40.238272 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:40.238307 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:40.238314 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:40.238616 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:40.238634 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:40.238639 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:40.239170 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:40.469700 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:40.739560 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:40.741824 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:40.741880 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:40.741902 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:40.743074 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:40.743126 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:40.743146 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:40.745343 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:40.969904 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:40.970020 [ 251 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:40.970243 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:40.970253 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:40.970274 [ 251 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5007 ms.
2021.12.13 09:49:40.970332 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:40.970379 [ 251 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5007 ms.
2021.12.13 09:49:41.245783 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:41.247077 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:41.247113 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:41.247128 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:41.247747 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:41.247776 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:41.247789 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:41.248360 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:41.471255 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:41.473553 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:41.473626 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:41.749160 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:41.751448 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:41.751509 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:41.751532 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:41.752599 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:41.752750 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:41.752793 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:41.754901 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:41.974320 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:42.000309 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 389.49 MiB, peak 394.54 MiB, will set to 391.48 MiB (RSS), difference: 2.00 MiB
2021.12.13 09:49:42.255501 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:42.256445 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:42.256475 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:42.256484 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:42.256876 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:42.256894 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:42.256902 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:42.257704 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:42.474668 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:42.758494 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:42.760202 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:42.760251 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:42.760269 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:42.761109 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:42.761148 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:42.761164 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:42.762802 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:42.975004 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:43.263356 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:43.265505 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:43.265561 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:43.265584 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:43.266625 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:43.266674 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:43.266693 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:43.267857 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:43.475258 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:43.768167 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:43.770326 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:43.770380 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:43.770404 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:43.771468 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:43.771519 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:43.771541 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:43.773550 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:43.975450 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:44.270212 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 76
2021.12.13 09:49:44.274208 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:44.276339 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:44.276399 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:44.276422 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:44.277671 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:44.277724 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:44.277745 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:44.280130 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:44.284381 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:44.286481 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_10_10_0 to 202112_10_10_0.
2021.12.13 09:49:44.287343 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 76
2021.12.13 09:49:44.426123 [ 178 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:49:44.426432 [ 178 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:49:44.475700 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:44.780696 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:44.781766 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:44.781794 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:44.781805 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:44.782275 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:44.782326 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:44.782338 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:44.783315 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:44.975941 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:45.284207 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:45.285977 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:45.286026 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:45.286044 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:45.286877 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:45.286914 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:45.286930 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:45.288414 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:45.476115 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:45.789487 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:45.791860 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:45.791920 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:45.791943 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:45.793236 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:45.793311 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:45.793345 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:45.795422 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:45.976562 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:46.163287 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 38052
2021.12.13 09:49:46.165360 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:46.166654 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_11_11_0 to 202112_11_11_0.
2021.12.13 09:49:46.167024 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 38052
2021.12.13 09:49:46.167025 [ 211 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Selected 6 parts from 202112_1_6_1 to 202112_11_11_0
2021.12.13 09:49:46.167114 [ 211 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:46.167490 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_6_1 to 202112_11_11_0 into Compact
2021.12.13 09:49:46.167599 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:49:46.167697 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 3 marks from part 202112_1_6_1, total 20797 rows starting from the beginning of the part
2021.12.13 09:49:46.167910 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_7_7_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:46.168067 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_8_8_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:46.168209 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_9_9_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:46.168390 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_10_10_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:46.168571 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_11_11_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:49:46.176935 [ 81 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 38052 rows, containing 5 columns (5 merged, 0 gathered) in 0.0095314 sec., 3992278.154311014 rows/sec., 101.15 MiB/sec.
2021.12.13 09:49:46.178488 [ 81 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_merge_202112_1_11_2 to 202112_1_11_2.
2021.12.13 09:49:46.178633 [ 81 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_11_2} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Merged 6 parts: from 202112_1_6_1 to 202112_11_11_0
2021.12.13 09:49:46.178758 [ 81 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.01 MiB.
2021.12.13 09:49:46.296036 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:46.298363 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:46.298419 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:46.298441 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:46.299735 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:46.299787 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:46.299807 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:46.301880 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:46.476848 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:46.476926 [ 245 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:46.477096 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:46.477105 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:46.477112 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:49:46.477177 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:46.477207 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:49:46.802768 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:46.804950 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:46.805037 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:46.805061 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:46.806182 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:46.806233 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:46.806253 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:46.808231 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:46.977785 [ 252 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:46.981206 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:46.981317 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:47.000315 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 395.49 MiB, peak 395.55 MiB, will set to 394.10 MiB (RSS), difference: -1.39 MiB
2021.12.13 09:49:47.309114 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:47.311339 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:47.311397 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:47.311420 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:47.313209 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:47.313285 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:47.313320 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:47.316588 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:47.482363 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:47.817459 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:47.819317 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:47.819398 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:47.819418 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:47.820472 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:47.820516 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:47.820534 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:47.822292 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:47.983180 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:48.323111 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:48.325539 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:48.325604 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:48.325628 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:48.326725 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:48.326778 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:48.326799 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:48.328900 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:48.483758 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:48.829779 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:48.832123 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:48.832191 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:48.832218 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:48.833358 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:48.833459 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:48.833481 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:48.835569 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:48.984270 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:49.336142 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:49.338387 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:49.338506 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:49.338530 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:49.339636 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:49.339686 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:49.339707 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:49.341689 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:49.484731 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:49.842221 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:49.843876 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:49.843933 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:49.843959 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:49.844747 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:49.844827 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:49.844857 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:49.846258 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:49.985217 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:50.346809 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:50.349070 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:50.349128 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:50.349150 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:50.350191 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:50.350240 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:50.350259 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:50.352217 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:50.485913 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:50.852952 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:50.855115 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:50.855172 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:50.855195 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:50.856278 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:50.856329 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:50.856348 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:50.858296 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:50.986630 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:51.359290 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:51.361597 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:51.361728 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:51.361774 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:51.362882 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:51.362937 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:51.362959 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:51.365077 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:51.487124 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:51.630798 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 29
2021.12.13 09:49:51.631178 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:51.631665 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_7_7_0 to 202112_7_7_0.
2021.12.13 09:49:51.631776 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 29
2021.12.13 09:49:51.787954 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 83
2021.12.13 09:49:51.814596 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:51.819094 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_11_11_0 to 202112_11_11_0.
2021.12.13 09:49:51.819425 [ 117 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Selected 6 parts from 202112_1_6_1 to 202112_11_11_0
2021.12.13 09:49:51.819464 [ 117 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:51.819646 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_6_1 to 202112_11_11_0 into Compact
2021.12.13 09:49:51.820064 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:49:51.820584 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 83
2021.12.13 09:49:51.820982 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_6_1, total 46 rows starting from the beginning of the part
2021.12.13 09:49:51.823551 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_7_7_0, total 7 rows starting from the beginning of the part
2021.12.13 09:49:51.825567 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_8_8_0, total 8 rows starting from the beginning of the part
2021.12.13 09:49:51.827505 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_9_9_0, total 7 rows starting from the beginning of the part
2021.12.13 09:49:51.829374 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_10_10_0, total 8 rows starting from the beginning of the part
2021.12.13 09:49:51.831013 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_11_11_0, total 7 rows starting from the beginning of the part
2021.12.13 09:49:51.844392 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 83 rows, containing 313 columns (313 merged, 0 gathered) in 0.0248011 sec., 3346.6257545028247 rows/sec., 7.96 MiB/sec.
2021.12.13 09:49:51.845543 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_merge_202112_1_11_2 to 202112_1_11_2.
2021.12.13 09:49:51.845830 [ 65 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_11_2} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Merged 6 parts: from 202112_1_6_1 to 202112_11_11_0
2021.12.13 09:49:51.846071 [ 65 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.17 MiB.
2021.12.13 09:49:51.865617 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:51.866196 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:51.866215 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:51.866220 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:51.866421 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:51.866442 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:51.866446 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:51.866882 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:51.987736 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:51.988034 [ 252 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:51.988695 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:51.988747 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:51.988782 [ 252 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5010 ms.
2021.12.13 09:49:51.988959 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:51.989096 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5011 ms.
2021.12.13 09:49:52.000435 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 394.34 MiB, peak 398.34 MiB, will set to 395.97 MiB (RSS), difference: 1.63 MiB
2021.12.13 09:49:52.367479 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:52.369697 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:52.369820 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:52.369846 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:52.371034 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:52.371086 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:52.371109 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:52.373318 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:52.489575 [ 260 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:52.490579 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:52.490613 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:52.873976 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:52.876542 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:52.876611 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:52.876641 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:52.876949 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:52.876962 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:52.876967 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:52.877439 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:52.991102 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:53.167513 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 41503
2021.12.13 09:49:53.172470 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:53.176076 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_12_12_0 to 202112_12_12_0.
2021.12.13 09:49:53.176689 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 41503
2021.12.13 09:49:53.377790 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:53.380007 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:53.380066 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:53.380089 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:53.381197 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:53.381249 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:53.381272 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:53.383290 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:53.491390 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:53.884394 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:53.886548 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:53.886607 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:53.886629 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:53.887677 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:53.887726 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:53.887746 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:53.889744 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:53.992039 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:54.390132 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:54.390944 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:54.390965 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:54.390973 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:54.391302 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:54.391317 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:54.391323 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:54.391968 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:54.492405 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:54.892313 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:54.893372 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:54.893410 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:54.893420 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:54.893851 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:54.893870 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:54.893879 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:54.894717 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:54.992749 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:55.394966 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:55.395624 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:55.395648 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:55.395656 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:55.395988 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:55.396000 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:55.396006 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:55.396501 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:55.493074 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:55.897567 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:55.899769 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:55.899827 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:55.899848 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:55.900883 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:55.900932 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:55.900952 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:55.903119 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:55.993454 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:56.403637 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:56.405883 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:56.405939 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:56.405961 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:56.407009 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:56.407058 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:56.407079 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:56.409004 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:56.494018 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:56.909570 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:56.911795 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:56.911854 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:56.911877 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:56.913106 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:56.913161 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:56.913183 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:56.915241 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:56.994391 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:57.415632 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:57.416893 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:57.416942 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:57.416955 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:57.417536 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:57.417562 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:57.417574 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:57.418641 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:57.494992 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:57.495144 [ 260 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:49:57.495359 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:49:57.495374 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:49:57.495383 [ 260 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:49:57.495437 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:49:57.495475 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5005 ms.
2021.12.13 09:49:57.919610 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:57.921852 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:57.921913 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:57.921935 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:57.923693 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:57.923752 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:57.923772 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:57.925754 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:57.996007 [ 254 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:49:57.998405 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:49:57.998484 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:49:58.000703 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 396.23 MiB, peak 400.01 MiB, will set to 392.60 MiB (RSS), difference: -3.63 MiB
2021.12.13 09:49:58.426261 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:58.428414 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:58.428469 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:58.428493 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:58.429565 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:58.429683 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:58.429714 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:58.430284 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:58.499496 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:58.930831 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:58.934078 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:58.934166 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:58.934197 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:58.935507 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:58.935636 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:58.935669 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:58.938390 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:58.999702 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:59.131884 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 6 entries to flush up to offset 35
2021.12.13 09:49:59.132447 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:59.132973 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_8_8_0 to 202112_8_8_0.
2021.12.13 09:49:59.133147 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 35
2021.12.13 09:49:59.320959 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 91
2021.12.13 09:49:59.331931 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:49:59.334140 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_12_12_0 to 202112_12_12_0.
2021.12.13 09:49:59.334953 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 91
2021.12.13 09:49:59.426639 [ 164 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:49:59.426763 [ 164 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:49:59.438879 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:59.439431 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:59.439450 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:59.439455 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:59.439652 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:59.439661 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:59.439665 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:59.440086 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:49:59.499899 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:49:59.940665 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:49:59.941366 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:59.941418 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:59.941424 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:59.941677 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:49:59.941689 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:49:59.941703 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:49:59.942140 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:00.000386 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:00.176925 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 44954
2021.12.13 09:50:00.177718 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:00.178205 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_13_13_0 to 202112_13_13_0.
2021.12.13 09:50:00.178321 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 44954
2021.12.13 09:50:00.442355 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:00.442913 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:00.442931 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:00.442935 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:00.443140 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:00.443149 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:00.443154 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:00.443553 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:00.500821 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:00.943948 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:00.946095 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:00.946152 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:00.946176 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:00.947368 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:00.947473 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:00.947516 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:00.949714 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:01.001229 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:01.450302 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:01.451394 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:01.451433 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:01.451443 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:01.451917 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:01.451937 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:01.451947 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:01.452881 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:01.501921 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:01.953215 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:01.954046 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:01.954108 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:01.954117 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:01.954467 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:01.954482 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:01.954489 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:01.955188 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:02.002418 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:02.455395 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:02.455955 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:02.455969 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:02.455974 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:02.456178 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:02.456187 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:02.456191 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:02.456598 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:02.502633 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:02.956791 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:02.957359 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:02.957374 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:02.957379 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:02.957574 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:02.957584 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:02.957589 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:02.958082 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:03.000233 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 392.06 MiB, peak 400.01 MiB, will set to 390.42 MiB (RSS), difference: -1.63 MiB
2021.12.13 09:50:03.002836 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:03.002906 [ 254 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:03.003110 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:03.003119 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:03.003126 [ 254 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5007 ms.
2021.12.13 09:50:03.003187 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:03.003228 [ 254 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5007 ms.
2021.12.13 09:50:03.458601 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:03.459343 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:03.459373 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:03.459379 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:03.459695 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:03.459711 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:03.459715 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:03.460173 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:03.503789 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:03.504629 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:03.504660 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:03.960507 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:03.961143 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:03.961171 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:03.961179 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:03.961497 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:03.961510 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:03.961515 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:03.962027 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:04.005314 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:04.462238 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:04.462831 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:04.462846 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:04.462852 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:04.463097 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:04.463112 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:04.463119 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:04.463658 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:04.506019 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:04.964292 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:04.970389 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:04.970629 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:04.970758 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:04.972550 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:04.972875 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:04.972938 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:04.974586 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:05.006555 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:05.474770 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:05.475262 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:05.475274 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:05.475280 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:05.475474 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:05.475483 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:05.475487 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:05.475899 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:05.506771 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:05.976494 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:05.978716 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:05.978775 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:05.978797 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:05.980036 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:05.980095 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:05.980124 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:05.983573 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:06.007019 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:06.484279 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:06.485690 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:06.485729 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:06.485744 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:06.486483 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:06.486516 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:06.486529 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:06.487825 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:06.507317 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:06.835493 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 98
2021.12.13 09:50:06.861169 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:06.865016 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_13_13_0 to 202112_13_13_0.
2021.12.13 09:50:06.866328 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 98
2021.12.13 09:50:06.988615 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:06.990834 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:06.990898 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:06.990920 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:06.992008 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:06.992057 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:06.992077 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:06.994279 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:07.007655 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:07.178707 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 48405
2021.12.13 09:50:07.181494 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:07.183343 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_14_14_0 to 202112_14_14_0.
2021.12.13 09:50:07.183756 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 48405
2021.12.13 09:50:07.495241 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:07.497625 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:07.497697 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:07.497720 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:07.498757 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:07.498806 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:07.498827 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:07.500755 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:07.508413 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:08.001133 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:08.001636 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:08.001651 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:08.001656 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:08.001851 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:08.001860 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:08.001864 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:08.002267 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:08.008843 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:08.503123 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:08.505433 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:08.505496 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:08.505521 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:08.506598 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:08.506650 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:08.506673 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:08.508908 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:08.509110 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:08.509331 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:08.509882 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:08.509929 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:08.509959 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:50:08.510120 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:08.510253 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:50:09.009597 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:09.010625 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:09.011755 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:09.011903 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:09.011976 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:09.012900 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:09.012994 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:09.013612 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:09.013669 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:09.013692 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:09.015676 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:09.513766 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:09.516156 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:09.517192 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:09.517219 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:09.517230 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:09.517707 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:09.517729 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:09.517738 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:09.518694 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:10.014614 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:10.019196 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:10.020604 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:10.020654 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:10.020675 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:10.021369 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:10.021400 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:10.021414 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:10.022647 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:10.515173 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:10.523530 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:10.524996 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:10.525038 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:10.525052 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:10.525698 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:10.525721 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:10.525731 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:10.526675 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:11.015716 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:11.027931 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:11.030098 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:11.030164 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:11.030188 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:11.031269 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:11.031319 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:11.031339 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:11.033481 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:11.516157 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:11.534079 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:11.536199 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:11.536318 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:11.536359 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:11.537428 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:11.537480 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:11.537501 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:11.539498 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:12.016732 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:12.039984 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:12.041400 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:12.041437 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:12.041452 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:12.042123 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:12.042154 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:12.042168 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:12.043538 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:12.517097 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:12.543814 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:12.544311 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:12.544322 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:12.544328 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:12.544520 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:12.544529 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:12.544533 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:12.544939 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:13.017774 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:13.045599 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:13.046408 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:13.046435 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:13.046443 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:13.046767 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:13.046782 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:13.046788 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:13.047507 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:13.518108 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:13.547855 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:13.549269 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:13.549308 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:13.549323 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:13.550016 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:13.550047 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:13.550059 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:13.551419 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:14.018672 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:14.018900 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:14.019415 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:14.019463 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:14.019492 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5008 ms.
2021.12.13 09:50:14.019653 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:14.019798 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5009 ms.
2021.12.13 09:50:14.051840 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:14.053669 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:14.053704 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:14.053718 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:14.054311 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:14.054338 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:14.054350 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:14.055481 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:14.184210 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 51856
2021.12.13 09:50:14.187707 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:14.190888 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_15_15_0 to 202112_15_15_0.
2021.12.13 09:50:14.191718 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 51856
2021.12.13 09:50:14.366815 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 106
2021.12.13 09:50:14.383419 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:14.386379 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_14_14_0 to 202112_14_14_0.
2021.12.13 09:50:14.387516 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 106
2021.12.13 09:50:14.427003 [ 123 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:50:14.427130 [ 123 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:50:14.519992 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:14.521265 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:14.521313 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:14.555873 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:14.557018 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:14.557046 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:14.557059 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:14.557625 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:14.557650 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:14.557741 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:14.558771 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:15.021794 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:15.059157 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:15.060802 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:15.060836 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:15.060850 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:15.061489 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:15.061517 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:15.061529 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:15.062735 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:15.522454 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:15.563113 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:15.564505 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:15.564543 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:15.564561 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:15.565219 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:15.565248 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:15.565262 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:15.566631 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:16.022720 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:16.066963 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:16.067537 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:16.067551 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:16.067568 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:16.067818 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:16.067827 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:16.067832 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:16.068239 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:16.522973 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:16.568463 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:16.569361 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:16.569383 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:16.569392 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:16.569798 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:16.569816 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:16.569824 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:16.570633 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:17.000710 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 390.77 MiB, peak 400.01 MiB, will set to 385.71 MiB (RSS), difference: -5.06 MiB
2021.12.13 09:50:17.023290 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:17.071032 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:17.072792 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:17.072842 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:17.072860 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:17.073711 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:17.073775 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:17.073791 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:17.075299 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:17.523623 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:17.575565 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:17.576029 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:17.576043 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:17.576047 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:17.576279 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:17.576287 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:17.576291 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:17.576683 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:18.023785 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:18.077055 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:18.078116 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:18.078146 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:18.078157 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:18.078642 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:18.078665 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:18.078675 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:18.079614 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:18.524215 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:18.579952 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:18.581705 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:18.581755 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:18.581819 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:18.582881 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:18.582925 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:18.582946 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:18.584696 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:19.024427 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:19.085346 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:19.086025 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:19.086075 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:19.086086 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:19.086403 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:19.086418 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:19.086424 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:19.086994 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:19.524776 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:19.525034 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:19.525772 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:19.525829 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:19.525863 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:50:19.526101 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:19.526262 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:50:19.587316 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:19.588783 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:19.588811 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:19.588823 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:19.589301 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:19.589322 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:19.589332 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:19.590262 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:20.026895 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:20.029135 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:20.029201 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:20.090873 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:20.092796 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:20.092850 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:20.092871 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:20.093819 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:20.093894 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:20.093970 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:20.095706 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:20.530235 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:20.596064 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:20.597148 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:20.597175 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:20.597186 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:20.597674 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:20.597696 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:20.597707 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:20.598654 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:21.031001 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:21.099563 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:21.101790 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:21.101851 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:21.101874 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:21.103114 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:21.103168 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:21.103189 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:21.105124 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:21.192541 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 55307
2021.12.13 09:50:21.195924 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:21.198301 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_16_16_0 to 202112_16_16_0.
2021.12.13 09:50:21.198851 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 55307
2021.12.13 09:50:21.198952 [ 177 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Selected 6 parts from 202112_1_11_2 to 202112_16_16_0
2021.12.13 09:50:21.199046 [ 177 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:21.199558 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_11_2 to 202112_16_16_0 into Compact
2021.12.13 09:50:21.199708 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:50:21.199821 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 5 marks from part 202112_1_11_2, total 38052 rows starting from the beginning of the part
2021.12.13 09:50:21.200126 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_12_12_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:21.200446 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_13_13_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:21.200688 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_14_14_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:21.200910 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_15_15_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:21.201130 [ 50 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_16_16_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:21.215963 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 55307 rows, containing 5 columns (5 merged, 0 gathered) in 0.0165849 sec., 3334780.4328033333 rows/sec., 83.55 MiB/sec.
2021.12.13 09:50:21.217191 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_merge_202112_1_16_3 to 202112_1_16_3.
2021.12.13 09:50:21.217344 [ 53 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_16_3} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Merged 6 parts: from 202112_1_11_2 to 202112_16_16_0
2021.12.13 09:50:21.217453 [ 53 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.01 MiB.
2021.12.13 09:50:21.531468 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:21.605676 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:21.607200 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:21.607238 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:21.607253 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:21.607897 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:21.607928 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:21.607942 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:21.609250 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:21.633981 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 37
2021.12.13 09:50:21.634446 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:21.634835 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_9_9_0 to 202112_9_9_0.
2021.12.13 09:50:21.635017 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 37
2021.12.13 09:50:21.887819 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 113
2021.12.13 09:50:21.909922 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:21.912214 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_15_15_0 to 202112_15_15_0.
2021.12.13 09:50:21.913186 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 113
2021.12.13 09:50:22.000304 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 389.75 MiB, peak 400.01 MiB, will set to 388.18 MiB (RSS), difference: -1.57 MiB
2021.12.13 09:50:22.032124 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:22.110033 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:22.111582 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:22.111629 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:22.111644 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:22.112315 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:22.112344 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:22.112358 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:22.113894 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:22.533013 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:22.614300 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:22.616241 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:22.616298 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:22.616318 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:22.617535 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:22.617581 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:22.617599 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:22.619308 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:23.033705 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:23.119786 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:23.120651 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:23.120673 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:23.120683 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:23.121086 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:23.121104 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:23.121112 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:23.121857 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:23.534331 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:23.622982 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:23.625234 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:23.625298 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:23.625322 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:23.626444 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:23.626503 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:23.626525 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:23.628475 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:24.034817 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:24.129392 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:24.131826 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:24.131896 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:24.131919 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:24.133036 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:24.133090 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:24.133112 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:24.135077 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:24.535548 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:24.635529 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:24.636523 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:24.636558 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:24.636568 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:24.637000 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:24.637019 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:24.637028 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:24.637906 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:25.036070 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:25.036147 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:25.036363 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:25.036377 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:25.036385 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5009 ms.
2021.12.13 09:50:25.036444 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:25.036481 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5009 ms.
2021.12.13 09:50:25.138864 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:25.141165 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:25.141226 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:25.141251 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:25.142386 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:25.142438 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:25.142459 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:25.144637 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:25.537132 [ 252 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:25.539815 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:25.539890 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:25.645180 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:25.647496 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:25.647572 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:25.647601 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:25.648902 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:25.648955 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:25.648976 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:25.650981 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:26.000291 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 387.62 MiB, peak 400.01 MiB, will set to 389.59 MiB (RSS), difference: 1.98 MiB
2021.12.13 09:50:26.041625 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:26.151647 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:26.153594 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:26.153664 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:26.153685 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:26.154638 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:26.154681 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:26.154699 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:26.156474 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:26.542544 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:26.657036 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:26.659438 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:26.659502 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:26.659525 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:26.660632 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:26.660685 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:26.660706 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:26.662661 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:27.043035 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:27.163158 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:27.163653 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:27.163669 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:27.163674 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:27.163973 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:27.163987 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:27.163991 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:27.164398 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:27.543396 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:27.664867 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:27.666768 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:27.666820 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:27.666840 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:27.667806 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:27.667850 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:27.667867 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:27.669674 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:28.043875 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:28.170452 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:28.171625 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:28.171660 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:28.171672 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:28.172159 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:28.172181 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:28.172191 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:28.173178 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:28.202329 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 58758
2021.12.13 09:50:28.204971 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:28.206757 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_17_17_0 to 202112_17_17_0.
2021.12.13 09:50:28.207282 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 58758
2021.12.13 09:50:28.544403 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:28.673428 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:28.673946 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:28.673959 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:28.673964 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:28.674161 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:28.674170 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:28.674173 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:28.674566 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:29.000739 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 390.10 MiB, peak 400.01 MiB, will set to 388.77 MiB (RSS), difference: -1.33 MiB
2021.12.13 09:50:29.044891 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:29.174962 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:29.175834 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:29.175862 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:29.175871 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:29.176283 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:29.176303 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:29.176311 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:29.177104 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:29.413432 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 121
2021.12.13 09:50:29.427496 [ 201 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:50:29.427796 [ 201 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:50:29.433627 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:29.437774 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_16_16_0 to 202112_16_16_0.
2021.12.13 09:50:29.438136 [ 207 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Selected 6 parts from 202112_1_11_2 to 202112_16_16_0
2021.12.13 09:50:29.438209 [ 207 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:29.438418 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_11_2 to 202112_16_16_0 into Compact
2021.12.13 09:50:29.439053 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:50:29.439489 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 121
2021.12.13 09:50:29.440204 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_11_2, total 83 rows starting from the beginning of the part
2021.12.13 09:50:29.442228 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_12_12_0, total 8 rows starting from the beginning of the part
2021.12.13 09:50:29.444434 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_13_13_0, total 7 rows starting from the beginning of the part
2021.12.13 09:50:29.446437 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_14_14_0, total 8 rows starting from the beginning of the part
2021.12.13 09:50:29.448192 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_15_15_0, total 7 rows starting from the beginning of the part
2021.12.13 09:50:29.449863 [ 61 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_16_16_0, total 8 rows starting from the beginning of the part
2021.12.13 09:50:29.462634 [ 77 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 121 rows, containing 313 columns (313 merged, 0 gathered) in 0.0242858 sec., 4982.335356463448 rows/sec., 11.85 MiB/sec.
2021.12.13 09:50:29.463588 [ 77 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_merge_202112_1_16_3 to 202112_1_16_3.
2021.12.13 09:50:29.463814 [ 77 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_16_3} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Merged 6 parts: from 202112_1_11_2 to 202112_16_16_0
2021.12.13 09:50:29.464149 [ 77 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.17 MiB.
2021.12.13 09:50:29.545245 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:29.677524 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:29.680205 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:29.680291 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:29.680357 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:29.681867 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:29.681931 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:29.681960 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:29.684835 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:30.000482 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 389.00 MiB, peak 400.01 MiB, will set to 387.92 MiB (RSS), difference: -1.09 MiB
2021.12.13 09:50:30.045556 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:30.185514 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:30.186105 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:30.186125 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:30.186131 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:30.186454 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:30.186469 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:30.186475 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:30.186994 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:30.546068 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:30.546248 [ 252 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:30.546657 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:30.546691 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:30.546715 [ 252 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5009 ms.
2021.12.13 09:50:30.546908 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:30.547004 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5009 ms.
2021.12.13 09:50:30.687377 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:30.687902 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:30.687914 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:30.687919 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:30.688105 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:30.688114 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:30.688118 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:30.688561 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:31.047882 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:31.050356 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:31.050433 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:31.189128 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:31.189788 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:31.189814 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:31.189821 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:31.190111 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:31.190127 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:31.190132 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:31.190609 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:31.552008 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:31.690969 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:31.691606 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:31.691627 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:31.691633 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:31.691869 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:31.691882 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:31.691887 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:31.692362 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:32.046556 [ 143 ] {} <Debug> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3) (MergerMutator): Selected 5 parts from 202112_1_5_1 to 202112_9_9_0
2021.12.13 09:50:32.046599 [ 143 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:32.046730 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTask::PrepareStage: Merging 5 parts: from 202112_1_5_1 to 202112_9_9_0 into Compact
2021.12.13 09:50:32.046787 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:50:32.046821 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_5_1, total 25 rows starting from the beginning of the part
2021.12.13 09:50:32.046909 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_6_6_0, total 2 rows starting from the beginning of the part
2021.12.13 09:50:32.046970 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_7_7_0, total 2 rows starting from the beginning of the part
2021.12.13 09:50:32.047040 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_8_8_0, total 6 rows starting from the beginning of the part
2021.12.13 09:50:32.047099 [ 83 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_9_9_0, total 2 rows starting from the beginning of the part
2021.12.13 09:50:32.047912 [ 81 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 37 rows, containing 10 columns (10 merged, 0 gathered) in 0.0012228 sec., 30258.423290807983 rows/sec., 7.03 MiB/sec.
2021.12.13 09:50:32.048425 [ 81 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_merge_202112_1_9_2 to 202112_1_9_2.
2021.12.13 09:50:32.048482 [ 81 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_9_2} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3) (MergerMutator): Merged 5 parts: from 202112_1_5_1 to 202112_9_9_0
2021.12.13 09:50:32.048529 [ 81 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.05 MiB.
2021.12.13 09:50:32.052278 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:32.192722 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:32.193272 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:32.193285 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:32.193291 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:32.193504 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:32.193513 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:32.193518 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:32.193964 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:32.552542 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:32.694908 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:32.698429 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:32.698631 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:32.698694 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:32.700640 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:32.700704 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:32.700728 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:32.703211 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:33.000476 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 388.45 MiB, peak 400.01 MiB, will set to 390.43 MiB (RSS), difference: 1.97 MiB
2021.12.13 09:50:33.052849 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:33.204097 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:33.205403 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:33.205443 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:33.205456 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:33.206167 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:33.206196 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:33.206208 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:33.207409 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:33.553433 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:33.708127 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:33.710255 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:33.710328 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:33.710349 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:33.711405 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:33.711454 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:33.711473 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:33.713432 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:34.053868 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:34.213940 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:34.215364 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:34.215427 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:34.215442 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:34.216142 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:34.216173 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:34.216185 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:34.217436 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:34.554309 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:34.717935 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:34.722496 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:34.722565 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:34.722588 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:34.723828 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:34.723884 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:34.723906 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:34.726017 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:35.000229 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 390.43 MiB, peak 400.01 MiB, will set to 387.03 MiB (RSS), difference: -3.40 MiB
2021.12.13 09:50:35.054776 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:35.207733 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 62209
2021.12.13 09:50:35.211237 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:35.213701 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_18_18_0 to 202112_18_18_0.
2021.12.13 09:50:35.214443 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 62209
2021.12.13 09:50:35.226516 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:35.227999 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:35.228035 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:35.228050 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:35.228687 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:35.228717 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:35.228731 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:35.230209 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:35.555278 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:35.730662 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:35.732110 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:35.732143 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:35.732159 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:35.732897 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:35.732928 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:35.732941 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:35.734147 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:36.055835 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:36.056208 [ 244 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:36.056882 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:36.056930 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:36.056963 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5008 ms.
2021.12.13 09:50:36.057320 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:36.057464 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5009 ms.
2021.12.13 09:50:36.234912 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:36.235486 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:36.235505 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:36.235510 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:36.235822 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:36.235836 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:36.235840 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:36.236269 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:36.557905 [ 260 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:36.559207 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:36.559249 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:36.635734 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 4 entries to flush up to offset 41
2021.12.13 09:50:36.636795 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:36.637869 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_10_10_0 to 202112_10_10_0.
2021.12.13 09:50:36.638550 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 41
2021.12.13 09:50:36.737043 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:36.738831 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:36.738883 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:36.738901 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:36.739732 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:36.739770 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:36.739820 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:36.741384 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:36.940087 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 128
2021.12.13 09:50:36.963219 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:36.966911 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_17_17_0 to 202112_17_17_0.
2021.12.13 09:50:36.968364 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 128
2021.12.13 09:50:37.000464 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 386.64 MiB, peak 400.01 MiB, will set to 381.04 MiB (RSS), difference: -5.59 MiB
2021.12.13 09:50:37.060590 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:37.241787 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:37.242861 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:37.242891 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:37.242902 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:37.243344 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:37.243364 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:37.243374 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:37.244258 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:37.561021 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:37.744736 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:37.746922 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:37.746982 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:37.747005 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:37.748194 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:37.748271 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:37.748303 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:37.751470 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:38.061416 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:38.252154 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:38.254574 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:38.254727 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:38.254772 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:38.256200 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:38.256253 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:38.256276 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:38.258333 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:38.562177 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:38.758809 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:38.760265 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:38.760324 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:38.760388 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:38.761045 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:38.761076 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:38.761092 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:38.762386 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:39.000578 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 381.04 MiB, peak 400.01 MiB, will set to 383.26 MiB (RSS), difference: 2.22 MiB
2021.12.13 09:50:39.063778 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:39.262828 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:39.263745 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:39.263771 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:39.263780 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:39.264164 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:39.264182 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:39.264190 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:39.264968 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:39.564598 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:39.765251 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:39.766131 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:39.766155 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:39.766164 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:39.766538 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:39.766556 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:39.766564 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:39.767326 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:40.065410 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:40.268353 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:40.270554 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:40.270618 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:40.270641 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:40.271722 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:40.271771 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:40.271792 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:40.273824 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:40.566172 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:40.774452 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:40.776663 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:40.776720 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:40.776744 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:40.777810 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:40.777877 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:40.777897 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:40.780729 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:41.066927 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:41.281371 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:41.284117 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:41.284195 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:41.284229 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:41.285857 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:41.285923 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:41.285954 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:41.288547 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:41.567438 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:41.567771 [ 260 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:41.568401 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:41.568450 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:41.568482 [ 260 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5010 ms.
2021.12.13 09:50:41.568757 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:41.568901 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5011 ms.
2021.12.13 09:50:41.789090 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:41.791199 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:41.791259 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:41.791281 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:41.792382 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:41.792439 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:41.792459 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:41.794488 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:42.069394 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:42.070730 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:42.070771 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:42.214847 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 65660
2021.12.13 09:50:42.217032 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:42.218491 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_19_19_0 to 202112_19_19_0.
2021.12.13 09:50:42.218862 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 65660
2021.12.13 09:50:42.295392 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:42.296438 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:42.296469 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:42.296480 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:42.296929 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:42.296949 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:42.296959 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:42.297917 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:42.571678 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:42.798163 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:42.798689 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:42.798700 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:42.798705 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:42.798910 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:42.798919 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:42.798923 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:42.799310 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:43.072132 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:43.299604 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:43.301385 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:43.301429 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:43.301446 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:43.302256 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:43.302294 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:43.302310 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:43.303873 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:43.572611 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:43.804863 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:43.807017 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:43.807078 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:43.807100 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:43.808194 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:43.808246 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:43.808265 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:43.810239 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:44.073138 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:44.311092 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:44.312995 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:44.313047 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:44.313065 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:44.313922 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:44.313960 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:44.313977 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:44.315618 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:44.428250 [ 208 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:50:44.428568 [ 208 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:50:44.468584 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 136
2021.12.13 09:50:44.488892 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:44.492357 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_18_18_0 to 202112_18_18_0.
2021.12.13 09:50:44.493799 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 136
2021.12.13 09:50:44.573727 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:44.816060 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:44.817159 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:44.817190 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:44.817201 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:44.817679 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:44.817717 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:44.817728 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:44.818908 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:45.000544 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 384.08 MiB, peak 400.01 MiB, will set to 386.20 MiB (RSS), difference: 2.12 MiB
2021.12.13 09:50:45.073987 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:45.319251 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:45.320023 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:45.320050 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:45.320057 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:45.320370 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:45.320385 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:45.320391 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:45.321042 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:45.574789 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:45.821697 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:45.824062 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:45.824124 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:45.824146 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:45.825260 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:45.825308 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:45.825328 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:45.827385 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:46.075494 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:46.327744 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:46.328301 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:46.328320 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:46.328324 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:46.328526 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:46.328535 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:46.328539 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:46.328947 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:46.575873 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:46.829258 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:46.829775 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:46.829793 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:46.829799 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:46.830011 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:46.830022 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:46.830027 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:46.830474 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:47.076016 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:47.076091 [ 245 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:47.076219 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:47.076231 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:47.076239 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:50:47.076290 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:47.076319 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:50:47.331241 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:47.331870 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:47.331893 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:47.331900 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:47.332186 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:47.332201 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:47.332205 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:47.332669 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:47.576607 [ 253 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:47.577583 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:47.577615 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:47.833229 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:47.834217 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:47.834248 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:47.834258 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:47.834664 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:47.834681 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:47.834690 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:47.835501 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:48.000101 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 385.70 MiB, peak 400.01 MiB, will set to 383.47 MiB (RSS), difference: -2.23 MiB
2021.12.13 09:50:48.078366 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:48.336036 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:48.337496 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:48.337536 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:48.337551 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:48.338268 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:48.338300 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:48.338313 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:48.339579 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:48.578706 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:48.839988 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:48.842278 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:48.842336 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:48.842359 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:48.843479 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:48.843533 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:48.843585 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:48.845581 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:49.078995 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:49.219322 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 69111
2021.12.13 09:50:49.220142 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:49.220599 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_20_20_0 to 202112_20_20_0.
2021.12.13 09:50:49.220737 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 69111
2021.12.13 09:50:49.345950 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:49.348609 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:49.348624 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:49.348629 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:49.348852 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:49.348862 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:49.348867 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:49.349339 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:49.579321 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:49.849679 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:49.850706 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:49.850738 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:49.850749 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:49.851261 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:49.851284 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:49.851294 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:49.852224 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:50.079856 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:50.352741 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:50.354649 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:50.354703 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:50.354726 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:50.355676 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:50.355719 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:50.355737 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:50.357445 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:50.580226 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:50.858394 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:50.860652 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:50.860718 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:50.860742 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:50.861916 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:50.861968 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:50.861988 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:50.863063 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:51.080472 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:51.363342 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:51.364974 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:51.365021 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:51.365036 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:51.365673 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:51.365744 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:51.365770 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:51.367093 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:51.580927 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:51.867873 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:51.870175 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:51.870238 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:51.870261 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:51.871309 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:51.871359 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:51.871380 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:51.873553 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:51.994235 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 143
2021.12.13 09:50:52.002577 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:52.004594 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_19_19_0 to 202112_19_19_0.
2021.12.13 09:50:52.005405 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 143
2021.12.13 09:50:52.081407 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:52.374172 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:52.375096 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:52.375130 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:52.375139 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:52.375586 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:52.375605 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:52.375613 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:52.376369 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:52.581917 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:52.582164 [ 253 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:52.582919 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:52.582968 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:52.583001 [ 253 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:50:52.583206 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:52.583349 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:50:52.877156 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:52.879322 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:52.879379 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:52.879439 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:52.880516 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:52.880565 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:52.880586 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:52.882895 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:53.083802 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:53.086201 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:53.086268 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:53.383499 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:53.385720 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:53.385779 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:53.385802 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:53.386880 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:53.386930 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:53.386950 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:53.388937 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:53.587793 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:53.889622 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:53.890743 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:53.890776 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:53.890788 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:53.891281 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:53.891302 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:53.891311 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:53.892266 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:54.088444 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:54.392716 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:54.393675 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:54.393705 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:54.393715 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:54.394148 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:54.394172 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:54.394189 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:54.395461 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:54.588805 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:54.896463 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:54.898725 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:54.898784 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:54.898814 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:54.899870 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:54.899919 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:54.899971 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:54.901966 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:55.089092 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:55.402662 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:55.403563 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:55.403593 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:55.403603 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:55.404019 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:55.404038 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:55.404046 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:55.404799 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:55.589706 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:55.905641 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:55.907305 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:55.907403 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:55.907429 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:55.908557 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:55.908628 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:55.908663 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:55.910766 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:56.000455 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 383.88 MiB, peak 400.01 MiB, will set to 382.84 MiB (RSS), difference: -1.04 MiB
2021.12.13 09:50:56.090434 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:56.221182 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 72562
2021.12.13 09:50:56.224733 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:56.227859 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_21_21_0 to 202112_21_21_0.
2021.12.13 09:50:56.228506 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 72562
2021.12.13 09:50:56.228532 [ 178 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Selected 6 parts from 202112_1_16_3 to 202112_21_21_0
2021.12.13 09:50:56.228651 [ 178 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:56.229141 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_16_3 to 202112_21_21_0 into Compact
2021.12.13 09:50:56.229298 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:50:56.229472 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 7 marks from part 202112_1_16_3, total 55307 rows starting from the beginning of the part
2021.12.13 09:50:56.229847 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_17_17_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:56.230101 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_18_18_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:56.230430 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_19_19_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:56.230658 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_20_20_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:56.230890 [ 63 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_21_21_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:50:56.245895 [ 75 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 72562 rows, containing 5 columns (5 merged, 0 gathered) in 0.0169663 sec., 4276831.129945834 rows/sec., 106.52 MiB/sec.
2021.12.13 09:50:56.246740 [ 75 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_merge_202112_1_21_4 to 202112_1_21_4.
2021.12.13 09:50:56.246849 [ 75 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_21_4} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Merged 6 parts: from 202112_1_16_3 to 202112_21_21_0
2021.12.13 09:50:56.246945 [ 75 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.01 MiB.
2021.12.13 09:50:56.411218 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:56.412332 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:56.412367 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:56.412379 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:56.413030 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:56.413057 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:56.413069 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:56.414221 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:56.590958 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:56.914497 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:56.915278 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:56.915299 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:56.915307 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:56.915646 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:56.915661 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:56.915668 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:56.916351 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:57.091555 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:57.416871 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:57.417416 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:57.417445 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:57.417451 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:57.417686 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:57.417699 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:57.417704 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:57.418184 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:57.591815 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:57.918458 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:57.919507 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:57.919534 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:57.919545 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:57.920054 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:57.920077 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:57.920086 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:57.921028 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:58.092135 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:58.092488 [ 244 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:50:58.093159 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:50:58.093206 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:50:58.093304 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5009 ms.
2021.12.13 09:50:58.093565 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:50:58.093706 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5009 ms.
2021.12.13 09:50:58.421250 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:58.421910 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:58.421930 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:58.421935 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:58.422143 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:58.422152 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:58.422156 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:58.422583 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:58.594009 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:50:58.596088 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:50:58.596149 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:50:58.923122 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:58.925117 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:58.925182 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:58.925202 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:58.925956 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:58.925997 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:58.926016 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:58.927447 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:59.097160 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:59.139348 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 43
2021.12.13 09:50:59.140663 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:59.141791 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_11_11_0 to 202112_11_11_0.
2021.12.13 09:50:59.142190 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 43
2021.12.13 09:50:59.427724 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:59.428221 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:59.428235 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:59.428240 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:59.428437 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:59.428447 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:59.428451 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:59.428719 [ 206 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:50:59.428830 [ 206 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:50:59.428927 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:50:59.505833 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 151
2021.12.13 09:50:59.517603 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:50:59.520970 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_20_20_0 to 202112_20_20_0.
2021.12.13 09:50:59.522271 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 151
2021.12.13 09:50:59.597797 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:50:59.929389 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:50:59.931857 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:59.931905 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:59.931921 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:59.932803 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:50:59.932841 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:50:59.932854 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:50:59.934328 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:00.098574 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:00.435017 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:00.436148 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:00.436181 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:00.436193 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:00.436727 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:00.436750 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:00.436760 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:00.437672 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:00.599408 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:00.938333 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:00.939266 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:00.939296 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:00.939304 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:00.939716 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:00.939733 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:00.939741 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:00.940503 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:01.099967 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:01.440731 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:01.441414 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:01.441435 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:01.441441 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:01.441753 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:01.441766 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:01.441772 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:01.442379 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:01.600452 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:01.942932 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:01.943635 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:01.943664 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:01.943671 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:01.944072 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:01.944090 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:01.944095 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:01.944605 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:02.101183 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:02.444810 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:02.445365 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:02.445380 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:02.445385 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:02.445606 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:02.445615 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:02.445619 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:02.446097 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:02.601570 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:02.946355 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:02.946876 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:02.946892 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:02.946910 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:02.947143 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:02.947152 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:02.947156 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:02.947531 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:03.101779 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:03.228779 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 76013
2021.12.13 09:51:03.229487 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:03.230239 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_22_22_0 to 202112_22_22_0.
2021.12.13 09:51:03.230384 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 76013
2021.12.13 09:51:03.448056 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:03.450109 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:03.450158 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:03.450181 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:03.451590 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:03.451658 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:03.451688 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:03.454007 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:03.602000 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:03.602104 [ 244 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:03.602306 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:03.602320 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:03.602330 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5008 ms.
2021.12.13 09:51:03.602415 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:03.602461 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5008 ms.
2021.12.13 09:51:03.954552 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:03.957062 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:03.957132 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:03.957157 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:03.958337 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:03.958453 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:03.958498 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:03.959824 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:04.000124 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 385.34 MiB, peak 400.01 MiB, will set to 387.34 MiB (RSS), difference: 2.00 MiB
2021.12.13 09:51:04.103066 [ 248 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:04.104502 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:04.104548 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:04.460446 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:04.462837 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:04.462898 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:04.462923 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:04.464107 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:04.464160 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:04.464181 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:04.466197 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:04.605508 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:04.966573 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:04.967145 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:04.967158 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:04.967163 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:04.967364 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:04.967373 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:04.967377 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:04.967792 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:05.106133 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:05.468508 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:05.469606 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:05.469642 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:05.469654 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:05.470159 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:05.470182 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:05.470193 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:05.471249 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:05.606706 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:05.971464 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:05.971927 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:05.971941 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:05.971946 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:05.972172 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:05.972183 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:05.972187 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:05.972574 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:06.107072 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:06.473172 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:06.474310 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:06.474343 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:06.474354 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:06.474851 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:06.474873 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:06.474884 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:06.475886 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:06.607361 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:06.976200 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:06.977094 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:06.977124 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:06.977133 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:06.977504 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:06.977546 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:06.977555 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:06.978301 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:07.022381 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 158
2021.12.13 09:51:07.028719 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:07.030938 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_21_21_0 to 202112_21_21_0.
2021.12.13 09:51:07.031187 [ 136 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Selected 6 parts from 202112_1_16_3 to 202112_21_21_0
2021.12.13 09:51:07.031216 [ 136 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:07.031307 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_16_3 to 202112_21_21_0 into Compact
2021.12.13 09:51:07.031544 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:51:07.031848 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 158
2021.12.13 09:51:07.032111 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_16_3, total 121 rows starting from the beginning of the part
2021.12.13 09:51:07.033481 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_17_17_0, total 7 rows starting from the beginning of the part
2021.12.13 09:51:07.034772 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_18_18_0, total 8 rows starting from the beginning of the part
2021.12.13 09:51:07.036188 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_19_19_0, total 7 rows starting from the beginning of the part
2021.12.13 09:51:07.037655 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_20_20_0, total 8 rows starting from the beginning of the part
2021.12.13 09:51:07.039062 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_21_21_0, total 7 rows starting from the beginning of the part
2021.12.13 09:51:07.051168 [ 84 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 158 rows, containing 313 columns (313 merged, 0 gathered) in 0.0198883 sec., 7944.369302554768 rows/sec., 18.90 MiB/sec.
2021.12.13 09:51:07.052449 [ 75 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_merge_202112_1_21_4 to 202112_1_21_4.
2021.12.13 09:51:07.052760 [ 75 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_21_4} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Merged 6 parts: from 202112_1_16_3 to 202112_21_21_0
2021.12.13 09:51:07.053077 [ 75 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.17 MiB.
2021.12.13 09:51:07.107526 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:07.478510 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:07.479127 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:07.479175 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:07.479180 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:07.479450 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:07.479463 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:07.479482 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:07.479994 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:07.607681 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:07.980185 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:07.980698 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:07.980712 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:07.980717 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:07.980916 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:07.980927 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:07.980931 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:07.981472 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:08.000137 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 387.27 MiB, peak 400.01 MiB, will set to 389.44 MiB (RSS), difference: 2.17 MiB
2021.12.13 09:51:08.108080 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:08.481850 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:08.483923 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:08.483979 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:08.483998 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:08.484851 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:08.484890 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:08.484906 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:08.486580 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:08.608249 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:08.986973 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:08.988240 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:08.988277 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:08.988298 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:08.988947 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:08.988976 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:08.988989 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:08.990192 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:09.108372 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:09.108444 [ 248 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:09.108535 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:09.108541 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:09.108548 [ 248 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:51:09.108591 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:09.108614 [ 248 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5005 ms.
2021.12.13 09:51:09.490806 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:09.491704 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:09.491733 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:09.491739 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:09.492050 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:09.492061 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:09.492066 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:09.492559 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:09.609191 [ 247 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:09.611679 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:09.611770 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:09.993367 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:09.995301 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:09.995352 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:09.995372 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:09.996552 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:09.996627 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:09.996646 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:09.998550 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:10.112492 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:10.230831 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 79464
2021.12.13 09:51:10.231699 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:10.232403 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_23_23_0 to 202112_23_23_0.
2021.12.13 09:51:10.232540 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 79464
2021.12.13 09:51:10.499241 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:10.501044 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:10.501100 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:10.501118 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:10.502020 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:10.502059 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:10.502075 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:10.503720 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:10.613035 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:11.000584 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 389.39 MiB, peak 400.01 MiB, will set to 391.64 MiB (RSS), difference: 2.25 MiB
2021.12.13 09:51:11.004021 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:11.004549 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:11.004566 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:11.004570 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:11.004763 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:11.004772 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:11.004776 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:11.005172 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:11.113245 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:11.505779 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:11.507240 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:11.507305 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:11.507321 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:11.508048 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:11.508079 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:11.508093 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:11.509353 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:11.613724 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:12.009555 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:12.010144 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:12.010163 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:12.010168 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:12.010391 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:12.010404 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:12.010411 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:12.010873 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:12.114032 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:12.511156 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:12.511670 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:12.511684 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:12.511690 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:12.511889 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:12.511909 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:12.511914 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:12.512323 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:12.614349 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:13.012956 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:13.015238 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:13.015304 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:13.015327 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:13.016385 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:13.016433 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:13.016453 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:13.018786 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:13.114560 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:13.519150 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:13.519702 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:13.519723 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:13.519729 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:13.519945 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:13.519955 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:13.519959 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:13.520448 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:13.614711 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:14.020663 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:14.021283 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:14.021300 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:14.021305 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:14.021505 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:14.021514 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:14.021518 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:14.021931 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:14.114883 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:14.142613 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 45
2021.12.13 09:51:14.143140 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:14.143659 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_12_12_0 to 202112_12_12_0.
2021.12.13 09:51:14.143822 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 45
2021.12.13 09:51:14.429222 [ 145 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:51:14.429352 [ 145 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:51:14.522486 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:14.524125 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:14.524226 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:14.524249 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:14.525025 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:14.525087 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:14.525103 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:14.526795 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:14.532359 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 166
2021.12.13 09:51:14.555245 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:14.557239 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_22_22_0 to 202112_22_22_0.
2021.12.13 09:51:14.558129 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 166
2021.12.13 09:51:14.615044 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:14.615146 [ 247 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:14.615256 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:14.615263 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:14.615270 [ 247 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:51:14.615324 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:14.615357 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:51:15.000149 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 391.71 MiB, peak 400.01 MiB, will set to 393.59 MiB (RSS), difference: 1.88 MiB
2021.12.13 09:51:15.027109 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:15.027613 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:15.027624 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:15.027629 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:15.027921 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:15.027930 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:15.027934 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:15.028376 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:15.115488 [ 246 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:15.116134 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:15.116160 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:15.528660 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:15.529245 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:15.529264 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:15.529269 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:15.529469 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:15.529478 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:15.529482 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:15.529929 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:15.616486 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:16.030474 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:16.031078 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:16.031101 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:16.031106 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:16.031420 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:16.031437 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:16.031441 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:16.031886 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:16.116637 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:16.532089 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:16.532588 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:16.532627 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:16.532634 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:16.532842 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:16.532851 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:16.532855 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:16.533263 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:16.616879 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:17.033892 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:17.036231 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:17.036289 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:17.036311 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:17.037503 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:17.037555 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:17.037576 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:17.039238 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:17.117223 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:17.232746 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 82915
2021.12.13 09:51:17.233492 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:17.234039 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_24_24_0 to 202112_24_24_0.
2021.12.13 09:51:17.234184 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 82915
2021.12.13 09:51:17.539561 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:17.540212 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:17.540232 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:17.540237 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:17.540435 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:17.540444 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:17.540448 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:17.540903 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:17.617671 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:18.041555 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:18.043828 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:18.043890 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:18.043912 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:18.045008 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:18.045058 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:18.045078 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:18.047120 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:18.117964 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:18.547667 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:18.550101 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:18.550167 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:18.550191 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:18.551526 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:18.551720 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:18.551743 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:18.553938 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:18.618551 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:19.054763 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:19.056943 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:19.057070 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:19.057112 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:19.058177 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:19.058230 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:19.058251 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:19.060294 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:19.118770 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:19.560893 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:19.562662 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:19.562859 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:19.562886 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:19.563731 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:19.563770 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:19.563786 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:19.565333 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:19.619109 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:20.065781 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:20.067307 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:20.067342 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:20.067355 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:20.067944 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:20.067971 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:20.068025 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:20.069179 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:20.119404 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:20.119518 [ 246 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:20.119751 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:20.119771 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:20.119782 [ 246 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5004 ms.
2021.12.13 09:51:20.119880 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:20.119922 [ 246 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5004 ms.
2021.12.13 09:51:20.569924 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:20.571383 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:20.571425 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:20.571440 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:20.572125 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:20.572156 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:20.572169 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:20.573492 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:20.620291 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:20.621942 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:20.621986 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:21.074341 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:21.076710 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:21.076775 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:21.076799 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:21.077863 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:21.077913 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:21.077945 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:21.080062 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:21.122792 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:21.580879 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:21.583290 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:21.583361 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:21.583384 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:21.584457 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:21.584508 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:21.584529 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:21.586675 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:21.623188 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:22.058419 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 173
2021.12.13 09:51:22.083513 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:22.087124 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:22.087238 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_23_23_0 to 202112_23_23_0.
2021.12.13 09:51:22.088042 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:22.088065 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:22.088089 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:22.088405 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:22.088419 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:22.088426 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:22.088648 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 173
2021.12.13 09:51:22.089070 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:22.123662 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:22.589691 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:22.591973 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:22.592033 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:22.592056 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:22.593163 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:22.593217 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:22.593240 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:22.594737 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:22.624307 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:23.095341 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:23.096015 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:23.096039 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:23.096045 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:23.096285 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:23.096324 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:23.096333 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:23.096804 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:23.124567 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:23.597421 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:23.598876 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:23.598920 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:23.598935 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:23.599622 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:23.599654 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:23.599667 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:23.600959 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:23.624890 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:24.101864 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:24.104231 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:24.104293 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:24.104315 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:24.105373 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:24.105423 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:24.105443 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:24.107509 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:24.125131 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:24.234848 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 86366
2021.12.13 09:51:24.237644 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:24.239444 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_25_25_0 to 202112_25_25_0.
2021.12.13 09:51:24.239885 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 86366
2021.12.13 09:51:24.608054 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:24.609570 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:24.609614 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:24.609630 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:24.610361 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:24.610396 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:24.610411 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:24.611687 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:24.625446 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:25.112226 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:25.113864 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:25.113910 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:25.113924 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:25.114518 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:25.114547 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:25.114559 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:25.115827 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:25.125710 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:25.616174 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:25.617953 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:25.618005 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:25.618046 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:25.619088 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:25.619143 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:25.619166 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:25.621352 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:25.626136 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:25.626231 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:25.626467 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:25.626481 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:25.626490 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:51:25.626547 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:25.626581 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:51:26.121577 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:26.122358 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:26.122393 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:26.122400 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:26.122793 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:26.122850 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:26.122859 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:26.123582 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:26.126710 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:26.127289 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:26.127323 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:26.623890 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:26.624367 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:26.624379 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:26.624385 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:26.624579 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:26.624588 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:26.624592 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:26.624996 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:26.627659 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:27.125568 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:27.126255 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:27.126292 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:27.126301 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:27.126607 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:27.126621 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:27.126626 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:27.127055 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:27.127781 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:27.627210 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:27.627693 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:27.627707 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:27.627713 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:27.627907 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:27.627977 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:27.627988 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:27.627992 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:27.628395 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:28.128110 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:28.129018 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:28.129508 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:28.129525 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:28.129530 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:28.129730 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:28.129741 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:28.129745 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:28.130178 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:28.628480 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:28.630550 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:28.632800 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:28.632920 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:28.632995 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:28.634051 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:28.634102 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:28.634122 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:28.636142 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:29.128877 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:29.137062 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:29.138454 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:29.138499 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:29.138522 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:29.139208 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:29.139239 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:29.139253 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:29.140389 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:29.429522 [ 209 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:51:29.429703 [ 209 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:51:29.588888 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 181
2021.12.13 09:51:29.594382 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:29.596227 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_24_24_0 to 202112_24_24_0.
2021.12.13 09:51:29.596950 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 181
2021.12.13 09:51:29.629115 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:29.640569 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:29.641071 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:29.641084 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:29.641089 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:29.641315 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:29.641325 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:29.641329 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:29.641724 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:30.129613 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:30.141931 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:30.142476 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:30.142492 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:30.142499 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:30.142746 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:30.142759 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:30.142764 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:30.143211 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:30.629767 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:30.643361 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:30.643824 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:30.643838 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:30.643852 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:30.644128 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:30.644140 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:30.644145 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:30.644566 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:31.000125 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 393.96 MiB, peak 400.01 MiB, will set to 390.00 MiB (RSS), difference: -3.96 MiB
2021.12.13 09:51:31.129928 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:31.130022 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:31.130136 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:31.130148 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:31.130156 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5003 ms.
2021.12.13 09:51:31.130216 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:31.130245 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5003 ms.
2021.12.13 09:51:31.144891 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:31.145358 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:31.145373 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:31.145378 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:31.145572 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:31.145623 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:31.145630 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:31.146047 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:31.240077 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 89817
2021.12.13 09:51:31.240798 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:31.241507 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_26_26_0 to 202112_26_26_0.
2021.12.13 09:51:31.241672 [ 132 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Selected 6 parts from 202112_1_21_4 to 202112_26_26_0
2021.12.13 09:51:31.241675 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 89817
2021.12.13 09:51:31.241720 [ 132 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:31.241810 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_21_4 to 202112_26_26_0 into Compact
2021.12.13 09:51:31.241864 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:51:31.241902 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 8 marks from part 202112_1_21_4, total 72562 rows starting from the beginning of the part
2021.12.13 09:51:31.241982 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_22_22_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:51:31.242028 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_23_23_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:51:31.242070 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_24_24_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:51:31.242113 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_25_25_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:51:31.242157 [ 82 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_26_26_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:51:31.247049 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 89817 rows, containing 5 columns (5 merged, 0 gathered) in 0.0052664 sec., 17054724.28983746 rows/sec., 420.68 MiB/sec.
2021.12.13 09:51:31.247645 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_merge_202112_1_26_5 to 202112_1_26_5.
2021.12.13 09:51:31.247706 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_26_5} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Merged 6 parts: from 202112_1_21_4 to 202112_26_26_0
2021.12.13 09:51:31.247757 [ 78 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.01 MiB.
2021.12.13 09:51:31.630393 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:31.631051 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:31.631070 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:31.646288 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:31.646779 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:31.646800 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:31.646805 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:31.646999 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:31.647008 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:31.647012 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:31.647447 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:32.000505 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 394.00 MiB, peak 400.01 MiB, will set to 392.51 MiB (RSS), difference: -1.49 MiB
2021.12.13 09:51:32.131721 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:32.147964 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:32.149953 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:32.150078 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:32.150123 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:32.150996 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:32.151114 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:32.151142 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:32.153441 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:32.632406 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:32.653993 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:32.656290 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:32.656377 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:32.656434 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:32.657533 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:32.657589 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:32.657611 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:32.659351 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:33.000291 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 392.51 MiB, peak 400.01 MiB, will set to 390.50 MiB (RSS), difference: -2.01 MiB
2021.12.13 09:51:33.133179 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:33.159651 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:33.160759 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:33.160792 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:33.160804 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:33.161348 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:33.161374 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:33.161384 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:33.162388 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:33.633608 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:33.662895 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:33.664293 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:33.664330 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:33.664345 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:33.665056 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:33.665109 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:33.665122 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:33.666435 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:34.134018 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:34.167015 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:34.169258 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:34.169341 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:34.169366 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:34.170423 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:34.170474 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:34.170496 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:34.172443 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:34.634413 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:34.672806 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:34.673279 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:34.673291 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:34.673296 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:34.673508 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:34.673517 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:34.673521 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:34.673901 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:35.134846 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:35.174193 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:35.174708 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:35.174721 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:35.174727 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:35.174932 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:35.174942 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:35.174947 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:35.175391 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:35.635064 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:35.675610 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:35.676133 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:35.676148 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:35.676152 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:35.676352 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:35.676360 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:35.676365 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:35.676752 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:36.135334 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:36.176914 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:36.177797 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:36.177853 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:36.177866 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:36.178261 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:36.178288 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:36.178296 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:36.178935 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:36.635608 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:36.635685 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:36.635857 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:36.635867 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:36.635873 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:51:36.635924 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:36.635952 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5005 ms.
2021.12.13 09:51:36.644603 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 47
2021.12.13 09:51:36.645089 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:36.645510 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_13_13_0 to 202112_13_13_0.
2021.12.13 09:51:36.645653 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 47
2021.12.13 09:51:36.679260 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:36.679773 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:36.679786 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:36.679802 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:36.679998 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:36.680007 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:36.680011 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:36.680429 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:37.097175 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 188
2021.12.13 09:51:37.104252 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:37.107162 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_25_25_0 to 202112_25_25_0.
2021.12.13 09:51:37.108806 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 188
2021.12.13 09:51:37.136191 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:37.136827 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:37.136843 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:37.180632 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:37.181132 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:37.181147 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:37.181152 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:37.181349 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:37.181359 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:37.181363 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:37.181786 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:37.637099 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:37.681930 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:37.682441 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:37.682457 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:37.682462 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:37.682657 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:37.682665 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:37.682670 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:37.683090 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:38.137244 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:38.183490 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:38.185518 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:38.185571 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:38.185593 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:38.186650 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:38.186698 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:38.186718 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:38.188764 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:38.242202 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 93268
2021.12.13 09:51:38.245421 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:38.247611 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_27_27_0 to 202112_27_27_0.
2021.12.13 09:51:38.248155 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 93268
2021.12.13 09:51:38.637664 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:38.689288 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:38.691227 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:38.691278 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:38.691298 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:38.692272 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:38.692317 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:38.692451 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:38.694325 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:39.138377 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:39.194842 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:39.197105 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:39.197171 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:39.197200 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:39.197983 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:39.198015 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:39.198028 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:39.199367 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:39.639212 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:39.700475 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:39.702879 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:39.703010 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:39.703047 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:39.704157 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:39.704206 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:39.704227 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:39.706184 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:40.139822 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:40.206581 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:40.207175 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:40.207228 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:40.207242 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:40.207564 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:40.207581 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:40.207586 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:40.208077 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:40.640449 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:40.708394 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:40.708963 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:40.708983 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:40.708989 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:40.709271 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:40.709286 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:40.709291 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:40.709801 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:41.140818 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:41.210342 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:41.210887 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:41.210904 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:41.210910 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:41.211144 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:41.211156 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:41.211161 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:41.211696 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:41.641384 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:41.712202 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:41.713652 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:41.713734 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:41.713750 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:41.714427 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:41.714458 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:41.714472 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:41.715795 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:42.142103 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:42.142420 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:42.142922 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:42.142972 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:42.143002 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:51:42.143245 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:42.143380 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5007 ms.
2021.12.13 09:51:42.216517 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:42.218417 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:42.218642 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:42.218685 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:42.219787 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:42.219845 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:42.219868 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:42.221752 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:42.643568 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:42.644406 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:42.644438 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:42.722410 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:42.723174 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:42.723215 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:42.723222 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:42.723504 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:42.723542 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:42.723555 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:42.724143 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:43.144984 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:43.224792 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:43.226041 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:43.226080 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:43.226104 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:43.226643 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:43.226668 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:43.226680 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:43.227831 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:43.645282 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:43.728264 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:43.730472 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:43.730532 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:43.730554 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:43.731580 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:43.731662 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:43.731682 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:43.733849 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:44.145615 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:44.234324 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:44.235773 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:44.235818 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:44.235834 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:44.236530 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:44.236562 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:44.236576 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:44.237859 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:44.430316 [ 126 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:51:44.430572 [ 126 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:51:44.609111 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 196
2021.12.13 09:51:44.628585 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:44.630627 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_26_26_0 to 202112_26_26_0.
2021.12.13 09:51:44.630873 [ 189 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Selected 6 parts from 202112_1_21_4 to 202112_26_26_0
2021.12.13 09:51:44.630897 [ 189 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:44.631040 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_21_4 to 202112_26_26_0 into Compact
2021.12.13 09:51:44.631325 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:51:44.631583 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 196
2021.12.13 09:51:44.631714 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_21_4, total 158 rows starting from the beginning of the part
2021.12.13 09:51:44.633060 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_22_22_0, total 8 rows starting from the beginning of the part
2021.12.13 09:51:44.634394 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_23_23_0, total 7 rows starting from the beginning of the part
2021.12.13 09:51:44.635548 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_24_24_0, total 8 rows starting from the beginning of the part
2021.12.13 09:51:44.636733 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_25_25_0, total 7 rows starting from the beginning of the part
2021.12.13 09:51:44.637876 [ 83 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_26_26_0, total 8 rows starting from the beginning of the part
2021.12.13 09:51:44.645850 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:44.649899 [ 63 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 196 rows, containing 313 columns (313 merged, 0 gathered) in 0.0189001 sec., 10370.315500976185 rows/sec., 24.67 MiB/sec.
2021.12.13 09:51:44.651835 [ 78 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_merge_202112_1_26_5 to 202112_1_26_5.
2021.12.13 09:51:44.652162 [ 78 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_26_5} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Merged 6 parts: from 202112_1_21_4 to 202112_26_26_0
2021.12.13 09:51:44.652499 [ 78 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.17 MiB.
2021.12.13 09:51:44.738353 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:44.739755 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:44.739798 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:44.739812 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:44.740488 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:44.740520 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:44.740533 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:44.741756 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:45.000452 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 390.43 MiB, peak 400.01 MiB, will set to 386.12 MiB (RSS), difference: -4.31 MiB
2021.12.13 09:51:45.146194 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:45.242487 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:45.243331 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:45.243360 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:45.243391 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:45.243704 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:45.243718 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:45.243724 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:45.244267 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:45.249150 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 96719
2021.12.13 09:51:45.250373 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:45.251148 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_28_28_0 to 202112_28_28_0.
2021.12.13 09:51:45.251391 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 96719
2021.12.13 09:51:45.646572 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:45.744559 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:45.745090 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:45.745105 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:45.745110 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:45.745306 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:45.745315 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:45.745318 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:45.745719 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:46.146747 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:46.245882 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:46.246678 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:46.246701 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:46.246709 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:46.247091 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:46.247105 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:46.247112 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:46.247734 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:46.646886 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:46.747963 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:46.748516 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:46.748531 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:46.748536 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:46.748735 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:46.748744 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:46.748749 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:46.749241 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:47.147031 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:47.249395 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:47.250072 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:47.250091 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:47.250098 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:47.250370 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:47.250382 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:47.250388 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:47.250986 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:47.647189 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:47.647306 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:47.647481 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:47.647500 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:47.647513 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5003 ms.
2021.12.13 09:51:47.647598 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:47.647641 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5004 ms.
2021.12.13 09:51:47.751155 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:47.751917 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:47.751943 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:47.751950 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:47.752270 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:47.752284 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:47.752291 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:47.752988 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:48.130900 [ 168 ] {} <Debug> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3) (MergerMutator): Selected 5 parts from 202112_1_9_2 to 202112_13_13_0
2021.12.13 09:51:48.130972 [ 168 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:48.131088 [ 80 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTask::PrepareStage: Merging 5 parts: from 202112_1_9_2 to 202112_13_13_0 into Compact
2021.12.13 09:51:48.131154 [ 80 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:51:48.131211 [ 80 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_9_2, total 37 rows starting from the beginning of the part
2021.12.13 09:51:48.131423 [ 80 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_10_10_0, total 4 rows starting from the beginning of the part
2021.12.13 09:51:48.131548 [ 80 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_11_11_0, total 2 rows starting from the beginning of the part
2021.12.13 09:51:48.131621 [ 80 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_12_12_0, total 2 rows starting from the beginning of the part
2021.12.13 09:51:48.131673 [ 80 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_13_13_0, total 2 rows starting from the beginning of the part
2021.12.13 09:51:48.132475 [ 63 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 47 rows, containing 10 columns (10 merged, 0 gathered) in 0.0014398 sec., 32643.42269759689 rows/sec., 8.13 MiB/sec.
2021.12.13 09:51:48.132915 [ 52 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_merge_202112_1_13_3 to 202112_1_13_3.
2021.12.13 09:51:48.132970 [ 52 ] {cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3::202112_1_13_3} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3) (MergerMutator): Merged 5 parts: from 202112_1_9_2 to 202112_13_13_0
2021.12.13 09:51:48.133016 [ 52 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.06 MiB.
2021.12.13 09:51:48.147788 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:48.148298 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:48.148324 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:48.253286 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:48.253805 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:48.253817 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:48.253822 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:48.254004 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:48.254022 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:48.254026 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:48.254503 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:48.648605 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:48.754700 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:48.755167 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:48.755179 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:48.755185 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:48.755397 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:48.755407 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:48.755411 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:48.755809 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:49.148765 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:49.255948 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:49.256437 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:49.256452 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:49.256458 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:49.256691 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:49.256701 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:49.256705 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:49.257103 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:49.649147 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:49.757411 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:49.758476 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:49.758505 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:49.758516 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:49.758989 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:49.759011 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:49.759021 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:49.759965 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:50.149319 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:50.260336 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:50.262090 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:50.262138 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:50.262156 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:50.263083 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:50.263125 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:50.263140 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:50.264658 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:50.649496 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:50.764869 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:50.765410 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:50.765426 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:50.765430 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:50.765666 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:50.765675 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:50.765679 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:50.766099 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:51.149662 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:51.266259 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:51.266844 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:51.266871 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:51.266877 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:51.267150 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:51.267170 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:51.267176 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:51.267653 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:51.646111 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 4 entries to flush up to offset 51
2021.12.13 09:51:51.646572 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.83 GiB.
2021.12.13 09:51:51.646939 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_14_14_0 to 202112_14_14_0.
2021.12.13 09:51:51.647067 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 51
2021.12.13 09:51:51.649817 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:51.767902 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:51.769198 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:51.769267 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:51.769277 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:51.769844 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:51.769905 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:51.769913 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:51.770996 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:52.131853 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 204
2021.12.13 09:51:52.139741 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:51:52.141889 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_27_27_0 to 202112_27_27_0.
2021.12.13 09:51:52.142739 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 204
2021.12.13 09:51:52.150042 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:52.251740 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 100170
2021.12.13 09:51:52.253313 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:51:52.254235 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_29_29_0 to 202112_29_29_0.
2021.12.13 09:51:52.254465 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 100170
2021.12.13 09:51:52.271490 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:52.272304 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:52.272327 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:52.272332 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:52.272567 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:52.272579 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:52.272583 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:52.273308 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:52.650155 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:52.773622 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:52.775384 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:52.775429 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:52.775448 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:52.776343 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:52.776382 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:52.776400 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:52.778025 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:53.000268 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 385.21 MiB, peak 400.01 MiB, will set to 387.41 MiB (RSS), difference: 2.20 MiB
2021.12.13 09:51:53.150335 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:53.150421 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:53.150583 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:53.150593 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:53.150600 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5002 ms.
2021.12.13 09:51:53.150658 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:53.150696 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5002 ms.
2021.12.13 09:51:53.278360 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:53.278828 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:53.278840 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:53.278845 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:53.279093 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:53.279102 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:53.279105 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:53.279480 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:53.650979 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:53.652973 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:53.653046 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:53.779773 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:53.780350 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:53.780365 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:53.780370 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:53.780585 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:53.780594 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:53.780599 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:53.781019 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:54.000307 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 387.42 MiB, peak 400.01 MiB, will set to 385.57 MiB (RSS), difference: -1.85 MiB
2021.12.13 09:51:54.153719 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:54.281297 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:54.281911 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:54.281926 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:54.281933 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:54.282175 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:54.282186 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:54.282191 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:54.282736 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:54.654025 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:54.783081 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:54.784839 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:54.784885 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:54.784905 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:54.785901 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:54.785942 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:54.785960 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:54.787682 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:55.154369 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:55.288032 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:55.288777 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:55.288830 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:55.288837 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:55.289154 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:55.289168 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:55.289175 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:55.289835 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:55.654790 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:55.790231 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:55.791946 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:55.791991 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:55.792010 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:55.792936 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:55.792977 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:55.792995 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:55.794657 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:56.155023 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:56.295000 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:56.295676 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:56.295695 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:56.295702 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:56.296012 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:56.296037 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:56.296043 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:56.296641 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:56.655439 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:56.796995 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:56.798024 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:56.798058 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:56.798068 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:56.798516 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:56.798536 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:56.798545 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:56.799384 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:57.000683 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 385.57 MiB, peak 400.01 MiB, will set to 383.74 MiB (RSS), difference: -1.83 MiB
2021.12.13 09:51:57.155984 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:57.300038 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:57.300596 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:57.300614 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:57.300620 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:57.300835 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:57.300847 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:57.300867 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:57.301367 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:57.656352 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:57.802044 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:57.803064 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:57.803097 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:57.803107 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:57.803517 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:57.803536 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:57.803571 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:57.804463 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:58.157162 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:58.305084 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:58.305570 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:58.305585 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:58.305591 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:58.305798 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:58.305809 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:58.305813 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:58.306249 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:58.657336 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:58.657463 [ 250 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:51:58.657565 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:51:58.657571 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:51:58.657578 [ 250 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:51:58.657631 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:51:58.657657 [ 250 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:51:58.806905 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:58.807674 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:58.807687 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:58.807693 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:58.807885 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:58.807894 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:58.807898 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:58.808304 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:59.157858 [ 247 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:51:59.158403 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:51:59.158421 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:51:59.255338 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 103621
2021.12.13 09:51:59.259862 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:51:59.264545 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_30_30_0 to 202112_30_30_0.
2021.12.13 09:51:59.265148 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 103621
2021.12.13 09:51:59.308505 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:59.309043 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:59.309057 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:59.309062 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:59.309368 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:59.309378 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:59.309382 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:59.309774 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:51:59.430794 [ 144 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:51:59.430926 [ 144 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:51:59.643295 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 211
2021.12.13 09:51:59.658778 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:51:59.663530 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:51:59.667243 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_28_28_0 to 202112_28_28_0.
2021.12.13 09:51:59.668640 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 211
2021.12.13 09:51:59.809931 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:51:59.810423 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:59.810436 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:59.810441 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:59.810635 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:51:59.810644 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:51:59.810648 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:51:59.811055 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:00.159117 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:00.311395 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:00.314408 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:00.314471 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:00.314494 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:00.315066 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:00.315077 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:00.315081 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:00.315564 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:00.659619 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:00.816415 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:00.818597 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:00.818660 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:00.818682 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:00.819924 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:00.820055 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:00.820087 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:00.821999 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:01.159952 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:01.322527 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:01.324073 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:01.324118 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:01.324134 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:01.324785 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:01.324825 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:01.324846 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:01.326174 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:01.660492 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:01.826747 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:01.828551 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:01.828598 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:01.828617 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:01.829499 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:01.829539 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:01.829555 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:01.831083 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:02.161119 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:02.331337 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:02.331925 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:02.331938 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:02.331953 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:02.332138 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:02.332147 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:02.332152 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:02.332539 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:02.661401 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:02.832727 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:02.833262 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:02.833275 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:02.833280 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:02.833467 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:02.833475 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:02.833479 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:02.833941 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:03.161533 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:03.334551 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:03.335144 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:03.335165 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:03.335171 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:03.335548 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:03.335567 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:03.335588 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:03.336076 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:03.662171 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:03.836736 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:03.839136 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:03.839198 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:03.839221 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:03.840327 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:03.840380 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:03.840401 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:03.842367 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:04.162457 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:04.162631 [ 247 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:04.162972 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:04.163000 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:04.163016 [ 247 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:52:04.163118 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:04.163184 [ 247 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5005 ms.
2021.12.13 09:52:04.342725 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:04.343602 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:04.343626 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:04.343654 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:04.344087 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:04.344105 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:04.344113 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:04.345016 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:04.663749 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:04.666134 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:04.666200 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:04.845722 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:04.847945 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:04.848064 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:04.848102 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:04.849211 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:04.849261 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:04.849281 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:04.851367 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:05.167627 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:05.352107 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:05.354435 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:05.354496 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:05.354518 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:05.355767 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:05.355821 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:05.355843 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:05.357815 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:05.668201 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:05.858676 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:05.859793 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:05.859828 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:05.859839 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:05.860315 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:05.860336 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:05.860346 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:05.861284 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:06.168873 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:06.265690 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 107072
2021.12.13 09:52:06.269145 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:06.271721 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_31_31_0 to 202112_31_31_0.
2021.12.13 09:52:06.272074 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 107072
2021.12.13 09:52:06.272125 [ 110 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Selected 6 parts from 202112_1_26_5 to 202112_31_31_0
2021.12.13 09:52:06.272186 [ 110 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:06.272582 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_26_5 to 202112_31_31_0 into Compact
2021.12.13 09:52:06.272717 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:52:06.272848 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 10 marks from part 202112_1_26_5, total 89817 rows starting from the beginning of the part
2021.12.13 09:52:06.273149 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_27_27_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:06.273342 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_28_28_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:06.273561 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_29_29_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:06.273723 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_30_30_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:06.273882 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_31_31_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:06.286942 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 107072 rows, containing 5 columns (5 merged, 0 gathered) in 0.0144869 sec., 7390953.205999903 rows/sec., 182.03 MiB/sec.
2021.12.13 09:52:06.287879 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_merge_202112_1_31_6 to 202112_1_31_6.
2021.12.13 09:52:06.287989 [ 84 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_31_6} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Merged 6 parts: from 202112_1_26_5 to 202112_31_31_0
2021.12.13 09:52:06.288061 [ 84 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.01 MiB.
2021.12.13 09:52:06.362118 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:06.363713 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:06.363763 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:06.363781 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:06.364516 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:06.364552 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:06.364566 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:06.365951 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:06.647390 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 53
2021.12.13 09:52:06.647927 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:06.648360 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_15_15_0 to 202112_15_15_0.
2021.12.13 09:52:06.648510 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 53
2021.12.13 09:52:06.669443 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:06.866182 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:06.866699 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:06.866713 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:06.866718 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:06.866950 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:06.866961 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:06.866965 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:06.867372 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:07.169312 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 219
2021.12.13 09:52:07.169880 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:07.191005 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:07.194456 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_29_29_0 to 202112_29_29_0.
2021.12.13 09:52:07.195727 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 219
2021.12.13 09:52:07.367619 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:07.368118 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:07.368134 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:07.368139 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:07.368337 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:07.368346 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:07.368360 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:07.368753 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:07.670497 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:07.869601 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:07.871324 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:07.871374 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:07.871392 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:07.872232 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:07.872325 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:07.872362 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:07.874048 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:08.170799 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:08.374458 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:08.376383 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:08.376435 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:08.376456 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:08.377402 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:08.377447 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:08.377465 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:08.379199 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:08.671312 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:08.879655 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:08.880976 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:08.881017 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:08.881033 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:08.881522 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:08.881533 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:08.881538 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:08.882111 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:09.171686 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:09.382276 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:09.382856 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:09.382875 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:09.382881 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:09.383149 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:09.383160 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:09.383165 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:09.383659 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:09.672144 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:09.672220 [ 244 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:09.672374 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:09.672382 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:09.672389 [ 244 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5008 ms.
2021.12.13 09:52:09.672438 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:09.672484 [ 244 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5008 ms.
2021.12.13 09:52:09.884162 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:09.886437 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:09.886505 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:09.886528 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:09.887633 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:09.887688 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:09.887710 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:09.888788 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:10.172997 [ 256 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:10.174657 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:10.174706 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:10.389384 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:10.391355 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:10.391407 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:10.391427 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:10.392383 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:10.392427 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:10.392445 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:10.394285 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:10.676059 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:10.894728 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:10.895206 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:10.895220 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:10.895225 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:10.895421 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:10.895430 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:10.895434 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:10.895836 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:11.176276 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:11.396450 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:11.397052 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:11.397073 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:11.397079 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:11.397422 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:11.397437 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:11.397442 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:11.397909 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:11.676908 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:11.898634 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:11.899215 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:11.899239 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:11.899246 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:11.899596 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:11.899612 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:11.899617 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:11.900077 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:12.177571 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:12.400686 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:12.402682 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:12.402786 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:12.402807 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:12.403744 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:12.403787 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:12.403805 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:12.405621 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:12.678145 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:12.906081 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:12.906717 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:12.906739 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:12.906745 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:12.907020 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:12.907032 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:12.907038 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:12.907541 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:13.178553 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:13.272279 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 110523
2021.12.13 09:52:13.273435 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:13.274044 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_32_32_0 to 202112_32_32_0.
2021.12.13 09:52:13.274233 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 110523
2021.12.13 09:52:13.407753 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:13.408330 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:13.408343 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:13.408347 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:13.408534 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:13.408543 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:13.408546 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:13.408921 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:13.678950 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:13.909809 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:13.911987 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:13.912046 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:13.912069 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:13.913302 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:13.913363 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:13.913384 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:13.915638 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:14.179108 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:14.416175 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:14.418218 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:14.418276 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:14.418296 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:14.419221 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:14.419263 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:14.419280 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:14.421051 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:14.431161 [ 185 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:52:14.431276 [ 185 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:52:14.679604 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:14.696181 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 226
2021.12.13 09:52:14.710097 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:14.713942 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_30_30_0 to 202112_30_30_0.
2021.12.13 09:52:14.715195 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 226
2021.12.13 09:52:14.921440 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:14.922770 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:14.922811 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:14.922824 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:14.923440 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:14.923470 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:14.923481 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:14.924307 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:15.179974 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:15.180058 [ 256 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:15.180201 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:15.180211 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:15.180219 [ 256 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5007 ms.
2021.12.13 09:52:15.180282 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:15.180307 [ 256 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5007 ms.
2021.12.13 09:52:15.424951 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:15.427178 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:15.427241 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:15.427263 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:15.428658 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:15.428761 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:15.428783 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:15.431131 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:15.680747 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:15.682714 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:15.682744 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:15.931588 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:15.932211 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:15.932249 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:15.932254 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:15.932484 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:15.932496 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:15.932500 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:15.932995 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:16.183467 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:16.433155 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:16.433733 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:16.433754 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:16.433760 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:16.434004 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:16.434015 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:16.434031 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:16.434487 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:16.683840 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:16.934829 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:16.935946 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:16.935981 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:16.935992 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:16.936467 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:16.936489 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:16.936499 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:16.937649 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:17.000332 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 387.98 MiB, peak 400.01 MiB, will set to 385.50 MiB (RSS), difference: -2.48 MiB
2021.12.13 09:52:17.184420 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:17.438000 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:17.438516 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:17.438528 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:17.438533 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:17.438716 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:17.438725 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:17.438729 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:17.439232 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:17.684694 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:17.939865 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:17.941217 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:17.941256 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:17.941270 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:17.941864 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:17.941891 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:17.941904 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:17.943201 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:18.184982 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:18.443895 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:18.445250 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:18.445290 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:18.445306 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:18.445969 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:18.445999 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:18.446012 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:18.447242 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:18.685382 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:18.947557 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:18.948140 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:18.948160 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:18.948165 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:18.948400 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:18.948410 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:18.948414 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:18.948808 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:19.185732 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:19.449497 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:19.451684 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:19.451802 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:19.451851 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:19.453046 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:19.453105 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:19.453126 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:19.455247 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:19.685949 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:19.955842 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:19.957723 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:19.957773 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:19.957793 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:19.958870 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:19.958913 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:19.958932 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:19.960721 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:20.186232 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:20.274570 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 113974
2021.12.13 09:52:20.276173 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:20.277262 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_33_33_0 to 202112_33_33_0.
2021.12.13 09:52:20.277521 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 113974
2021.12.13 09:52:20.461006 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:20.461654 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:20.461668 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:20.461674 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:20.461903 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:20.461913 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:20.461918 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:20.462374 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:20.686723 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:20.686991 [ 245 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:20.687618 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:20.687678 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:20.687725 [ 245 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:52:20.687987 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:20.688144 [ 245 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5007 ms.
2021.12.13 09:52:20.962767 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:20.964992 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:20.965052 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:20.965075 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:20.966160 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:20.966210 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:20.966231 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:20.968447 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:21.188264 [ 252 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:21.189050 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:21.189070 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:21.468802 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:21.469323 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:21.469337 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:21.469342 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:21.469539 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:21.469549 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:21.469553 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:21.469955 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:21.689789 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:21.970494 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:21.971162 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:21.971184 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:21.971189 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:21.971430 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:21.971443 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:21.971448 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:21.971920 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:22.189990 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:22.215570 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 234
2021.12.13 09:52:22.222217 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:22.224365 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_31_31_0 to 202112_31_31_0.
2021.12.13 09:52:22.224627 [ 208 ] {} <Debug> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Selected 6 parts from 202112_1_26_5 to 202112_31_31_0
2021.12.13 09:52:22.224653 [ 208 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:22.224795 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_26_5 to 202112_31_31_0 into Compact
2021.12.13 09:52:22.225092 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:52:22.225372 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 234
2021.12.13 09:52:22.226359 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_1_26_5, total 196 rows starting from the beginning of the part
2021.12.13 09:52:22.227719 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_27_27_0, total 8 rows starting from the beginning of the part
2021.12.13 09:52:22.229054 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_28_28_0, total 7 rows starting from the beginning of the part
2021.12.13 09:52:22.230310 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_29_29_0, total 8 rows starting from the beginning of the part
2021.12.13 09:52:22.231584 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_30_30_0, total 7 rows starting from the beginning of the part
2021.12.13 09:52:22.232979 [ 50 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_31_31_0, total 8 rows starting from the beginning of the part
2021.12.13 09:52:22.245789 [ 76 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 234 rows, containing 313 columns (313 merged, 0 gathered) in 0.021057 sec., 11112.694115970937 rows/sec., 26.43 MiB/sec.
2021.12.13 09:52:22.247351 [ 76 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_merge_202112_1_31_6 to 202112_1_31_6.
2021.12.13 09:52:22.247583 [ 76 ] {fadf8135-f00e-48dc-badf-8135f00ea8dc::202112_1_31_6} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc) (MergerMutator): Merged 6 parts: from 202112_1_26_5 to 202112_31_31_0
2021.12.13 09:52:22.247907 [ 76 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.17 MiB.
2021.12.13 09:52:22.472122 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:22.472628 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:22.472641 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:22.472646 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:22.472898 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:22.472908 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:22.472912 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:22.473307 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:22.690282 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:22.973495 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:22.973983 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:22.974012 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:22.974018 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:22.974199 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:22.974207 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:22.974211 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:22.974589 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:23.190932 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:23.475123 [ 253 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:23.476657 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:23.476704 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:23.476726 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:23.477450 [ 253 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:23.477484 [ 253 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:23.477499 [ 253 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:23.478943 [ 253 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:23.691273 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:23.979648 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:23.980818 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:23.980854 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:23.980866 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:23.981347 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:23.981384 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:23.981396 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:23.982408 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:24.191965 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:24.482986 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:24.483779 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:24.483803 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:24.483808 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:24.484069 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:24.484081 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:24.484086 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:24.484564 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:24.692354 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:24.984867 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:24.985633 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:24.985660 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:24.985666 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:24.985915 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:24.985927 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:24.985933 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:24.986529 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:25.193014 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:25.486760 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:25.487283 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:25.487296 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:25.487301 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:25.487485 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:25.487493 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:25.487497 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:25.487945 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:25.693242 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:25.988094 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:25.988695 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:25.988728 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:25.988735 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:25.988964 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:25.988974 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:25.988978 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:25.989452 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:26.193636 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:26.193895 [ 252 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:26.194526 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:26.194576 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:26.194607 [ 252 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5006 ms.
2021.12.13 09:52:26.194790 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:26.194922 [ 252 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5006 ms.
2021.12.13 09:52:26.490120 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:26.492570 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:26.492638 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:26.492661 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:26.493911 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:26.493966 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:26.493987 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:26.496711 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:26.695520 [ 260 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:26.696359 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:26.696386 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:26.997335 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:26.998946 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:26.998990 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:26.999007 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:26.999780 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:26.999842 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:26.999858 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:27.001545 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:27.196822 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:27.277890 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 117425
2021.12.13 09:52:27.281200 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:27.281714 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_34_34_0 to 202112_34_34_0.
2021.12.13 09:52:27.281867 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 117425
2021.12.13 09:52:27.501918 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:27.503208 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:27.503246 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:27.503257 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:27.503783 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:27.503806 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:27.503816 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:27.504781 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:27.697097 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:28.005652 [ 252 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:28.007583 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:28.007637 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:28.007656 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:28.008630 [ 252 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:28.008677 [ 252 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:28.008694 [ 252 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:28.010468 [ 252 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:28.197459 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:28.511081 [ 258 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:28.511706 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:28.511727 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:28.511734 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:28.511966 [ 258 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:28.511979 [ 258 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:28.511984 [ 258 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:28.512497 [ 258 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:28.697886 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:29.013131 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:29.014245 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:29.014286 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:29.014297 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:29.014821 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:29.014844 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:29.014871 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:29.015823 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:29.149671 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 55
2021.12.13 09:52:29.151358 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:29.155456 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_16_16_0 to 202112_16_16_0.
2021.12.13 09:52:29.156202 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 55
2021.12.13 09:52:29.198660 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:29.431718 [ 125 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:52:29.431994 [ 125 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:52:29.516214 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:29.517769 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:29.517819 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:29.517834 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:29.518533 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:29.518568 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:29.518581 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:29.519836 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:29.699000 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:29.725672 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 241
2021.12.13 09:52:29.750472 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:29.754564 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_32_32_0 to 202112_32_32_0.
2021.12.13 09:52:29.755841 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 241
2021.12.13 09:52:30.000361 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 385.60 MiB, peak 400.01 MiB, will set to 381.86 MiB (RSS), difference: -3.75 MiB
2021.12.13 09:52:30.020299 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:30.022597 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:30.022655 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:30.022678 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:30.023802 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:30.023853 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:30.023874 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:30.026024 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:30.199463 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:30.526599 [ 250 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:30.528962 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:30.529023 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:30.529047 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:30.530128 [ 250 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:30.530243 [ 250 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:30.530274 [ 250 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:30.532407 [ 250 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:30.699763 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:31.033065 [ 255 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:31.035187 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:31.035341 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:31.035381 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:31.036425 [ 255 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:31.036476 [ 255 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:31.036497 [ 255 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:31.038439 [ 255 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:31.200253 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:31.539197 [ 256 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:31.541318 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:31.541379 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:31.541399 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:31.542341 [ 256 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:31.542386 [ 256 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:31.542405 [ 256 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:31.544192 [ 256 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:31.700746 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:31.700831 [ 260 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:31.701041 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:31.701056 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:31.701065 [ 260 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5005 ms.
2021.12.13 09:52:31.701154 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:31.701214 [ 260 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5005 ms.
2021.12.13 09:52:32.045160 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:32.046747 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:32.046794 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:32.046812 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:32.047572 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:32.047608 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:32.047622 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:32.049072 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:32.202048 [ 259 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:32.204949 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:32.205020 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:32.549816 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:32.552096 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:32.552155 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:32.552181 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:32.553367 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:32.553421 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:32.553442 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:32.555658 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:32.706500 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:33.056170 [ 260 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:33.058911 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:33.058979 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:33.059010 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:33.060682 [ 260 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:33.060741 [ 260 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:33.060771 [ 260 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:33.063468 [ 260 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:33.207022 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:33.564294 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:33.566056 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:33.566110 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:33.566128 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:33.567165 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:33.567204 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:33.567220 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:33.568758 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:33.707249 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:34.069511 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:34.071756 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:34.071851 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:34.071875 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:34.073073 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:34.073129 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:34.073150 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:34.074427 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:34.207985 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:34.282340 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 120876
2021.12.13 09:52:34.283592 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:34.284641 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_35_35_0 to 202112_35_35_0.
2021.12.13 09:52:34.284848 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 120876
2021.12.13 09:52:34.574619 [ 246 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:34.575136 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:34.575147 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:34.575153 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:34.575369 [ 246 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:34.575379 [ 246 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:34.575383 [ 246 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:34.575823 [ 246 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:34.708692 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:35.000850 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 382.04 MiB, peak 400.01 MiB, will set to 384.00 MiB (RSS), difference: 1.96 MiB
2021.12.13 09:52:35.076686 [ 247 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:35.078961 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:35.079029 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:35.079052 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:35.080197 [ 247 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:35.080247 [ 247 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:35.080267 [ 247 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:35.082258 [ 247 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:35.209318 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:35.583072 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:35.583778 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:35.583798 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:35.583803 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:35.584146 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:35.584163 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:35.584169 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:35.584692 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:35.710201 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:36.085090 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:36.087395 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:36.087489 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:36.087512 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:36.088639 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:36.088708 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:36.088742 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:36.091726 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:36.210853 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:36.592368 [ 245 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:36.594689 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:36.594752 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:36.594775 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:36.595858 [ 245 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:36.595907 [ 245 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:36.595927 [ 245 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:36.598084 [ 245 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:36.711154 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:37.098764 [ 251 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:37.099417 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:37.099471 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:37.099478 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:37.099764 [ 251 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:37.099790 [ 251 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:37.099795 [ 251 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:37.100270 [ 251 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:37.211855 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:37.211943 [ 259 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:37.212160 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:37.212174 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:37.212183 [ 259 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5010 ms.
2021.12.13 09:52:37.212275 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:37.212312 [ 259 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5010 ms.
2021.12.13 09:52:37.256372 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush up to offset 249
2021.12.13 09:52:37.270490 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:37.274958 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_33_33_0 to 202112_33_33_0.
2021.12.13 09:52:37.276468 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 249
2021.12.13 09:52:37.601180 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:37.603451 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:37.603515 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:37.603537 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:37.604764 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:37.604879 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:37.604909 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:37.606920 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:37.713049 [ 253 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:37.714358 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:37.714399 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:38.107443 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:38.108519 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:38.108533 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:38.108537 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:38.108733 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:38.108742 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:38.108746 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:38.109166 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:38.215353 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:38.609751 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:38.610341 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:38.610362 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:38.610367 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:38.610599 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:38.610616 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:38.610621 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:38.611179 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:38.715549 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:39.000529 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 384.40 MiB, peak 400.01 MiB, will set to 381.83 MiB (RSS), difference: -2.57 MiB
2021.12.13 09:52:39.111409 [ 259 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:39.111922 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:39.111934 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:39.111940 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:39.112174 [ 259 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:39.112183 [ 259 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:39.112187 [ 259 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:39.112594 [ 259 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:39.216113 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:39.613198 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:39.615549 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:39.615679 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:39.615711 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:39.616904 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:39.616964 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:39.616987 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:39.619154 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:39.716853 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:40.119749 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:40.122020 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:40.122078 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:40.122102 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:40.123391 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:40.123459 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:40.123486 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:40.125540 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:40.217427 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:40.626022 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:40.627132 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:40.627158 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:40.627170 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:40.627627 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:40.627762 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:40.627782 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:40.628754 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:40.718061 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:41.129256 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:41.131425 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:41.131482 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:41.131535 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:41.132605 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:41.132654 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:41.132674 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:41.134834 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:41.218631 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:41.286394 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushing system log, 3451 entries to flush up to offset 124327
2021.12.13 09:52:41.288870 [ 97 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:41.289669 [ 97 ] {} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_insert_202112_36_36_0 to 202112_36_36_0.
2021.12.13 09:52:41.289828 [ 231 ] {} <Debug> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Selected 6 parts from 202112_1_31_6 to 202112_36_36_0
2021.12.13 09:52:41.289843 [ 97 ] {} <Trace> SystemLog (system.asynchronous_metric_log): Flushed system log up to offset 124327
2021.12.13 09:52:41.289855 [ 231 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:41.290021 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTask::PrepareStage: Merging 6 parts: from 202112_1_31_6 to 202112_36_36_0 into Compact
2021.12.13 09:52:41.290062 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTask::PrepareStage: Selected MergeAlgorithm: Horizontal
2021.12.13 09:52:41.290089 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTreeSequentialSource: Reading 12 marks from part 202112_1_31_6, total 107072 rows starting from the beginning of the part
2021.12.13 09:52:41.290177 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_32_32_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:41.290234 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_33_33_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:41.290331 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_34_34_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:41.290379 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_35_35_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:41.290435 [ 78 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTreeSequentialSource: Reading 2 marks from part 202112_36_36_0, total 3451 rows starting from the beginning of the part
2021.12.13 09:52:41.297566 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Debug> MergeTask::MergeProjectionsStage: Merge sorted 124327 rows, containing 5 columns (5 merged, 0 gathered) in 0.0076037 sec., 16350855.504556993 rows/sec., 402.25 MiB/sec.
2021.12.13 09:52:41.297952 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece): Renaming temporary part tmp_merge_202112_1_36_7 to 202112_1_36_7.
2021.12.13 09:52:41.298036 [ 61 ] {74237fb7-d2e5-4ece-b423-7fb7d2e5fece::202112_1_36_7} <Trace> system.asynchronous_metric_log (74237fb7-d2e5-4ece-b423-7fb7d2e5fece) (MergerMutator): Merged 6 parts: from 202112_1_31_6 to 202112_36_36_0
2021.12.13 09:52:41.298101 [ 61 ] {} <Debug> MemoryTracker: Peak memory usage Mutate/Merge: 4.01 MiB.
2021.12.13 09:52:41.635619 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:41.637934 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:41.638002 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:41.638073 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:41.639222 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:41.639273 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:41.639293 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:41.641415 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:41.719091 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:42.141858 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:42.142408 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:42.142427 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:42.142433 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:42.142631 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:42.142641 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:42.142645 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:42.143120 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:42.219360 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:42.643642 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:42.645005 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:42.645049 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:42.645063 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:42.645697 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:42.645726 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:42.645738 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:42.646909 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:42.719820 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:42.720098 [ 253 ] {} <Trace> PushingToViews: Pushing (sequentially) from default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) to default.table_i_mv (5189cc28-a2a2-4e19-9189-cc28a2a22e19) took 0 ms.
2021.12.13 09:52:42.720442 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Polled offset 2 (topic: topic_i, partition: 0)
2021.12.13 09:52:42.720524 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Nothing to commit.
2021.12.13 09:52:42.720567 [ 253 ] {} <Debug> StorageKafka (table_i_queue): Pushing 0.00 rows to default.table_i_queue (a38d990e-a0ef-4455-a38d-990ea0ef9455) took 5007 ms.
2021.12.13 09:52:42.720763 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stream(s) stalled. Reschedule.
2021.12.13 09:52:42.720889 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Execution took 5007 ms.
2021.12.13 09:52:43.147199 [ 248 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:43.147786 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:43.147807 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:43.147813 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:43.148050 [ 248 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:43.148060 [ 248 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:43.148065 [ 248 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:43.148522 [ 248 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:43.221117 [ 253 ] {} <Debug> StorageKafka (table_i_queue): Started streaming to 1 attached views
2021.12.13 09:52:43.222505 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already subscribed to topics: [topic_i]
2021.12.13 09:52:43.222540 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Already assigned to: [ topic_i[0:#] ]
2021.12.13 09:52:43.649165 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:43.651223 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:43.651274 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:43.651293 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:43.652300 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:43.652345 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:43.652363 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:43.654185 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:43.723171 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:44.154644 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:44.156078 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:44.156117 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:44.156131 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:44.156630 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushing system log, 2 entries to flush up to offset 57
2021.12.13 09:52:44.156877 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:44.156909 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:44.156923 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:44.157782 [ 100 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:44.158144 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:44.158661 [ 100 ] {} <Trace> system.trace_log (cfa00566-b5f5-4ec3-8fa0-0566b5f53ec3): Renaming temporary part tmp_insert_202112_17_17_0 to 202112_17_17_0.
2021.12.13 09:52:44.158927 [ 100 ] {} <Trace> SystemLog (system.trace_log): Flushed system log up to offset 57
2021.12.13 09:52:44.223456 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:44.432644 [ 119 ] {} <Debug> DNSResolver: Updating DNS cache
2021.12.13 09:52:44.432923 [ 119 ] {} <Debug> DNSResolver: Updated DNS cache
2021.12.13 09:52:44.658557 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:44.661604 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:44.661680 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:44.661715 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:44.663431 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:44.663504 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:44.663535 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:44.666598 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:44.723725 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:44.776632 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 7 entries to flush up to offset 256
2021.12.13 09:52:44.787363 [ 96 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 154.82 GiB.
2021.12.13 09:52:44.791253 [ 96 ] {} <Trace> system.metric_log (fadf8135-f00e-48dc-badf-8135f00ea8dc): Renaming temporary part tmp_insert_202112_34_34_0 to 202112_34_34_0.
2021.12.13 09:52:44.792767 [ 96 ] {} <Trace> SystemLog (system.metric_log): Flushed system log up to offset 256
2021.12.13 09:52:45.166902 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:45.167419 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:45.167441 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:45.167460 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:45.167707 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:45.167716 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:45.167721 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:45.168151 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:45.223961 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:45.668595 [ 244 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:45.670815 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:45.670878 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:45.670900 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:45.671955 [ 244 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:45.672003 [ 244 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:45.672023 [ 244 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:45.674178 [ 244 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:45.724287 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:46.000850 [ 238 ] {} <Trace> AsynchronousMetrics: MemoryTracking: was 385.04 MiB, peak 400.01 MiB, will set to 383.68 MiB (RSS), difference: -1.36 MiB
2021.12.13 09:52:46.174804 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:46.175513 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:46.175546 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:46.175554 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:46.175869 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:46.175892 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:46.175899 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:46.176428 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:46.224769 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:46.676666 [ 249 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:46.677201 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:46.677220 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:46.677225 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:46.677498 [ 249 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:46.677512 [ 249 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:46.677516 [ 249 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:46.677914 [ 249 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:46.724990 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
2021.12.13 09:52:47.178805 [ 254 ] {} <Debug> StorageKafka (table_ii_queue): Started streaming to 1 attached views
2021.12.13 09:52:47.181073 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:47.181146 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:47.181168 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:47.182362 [ 254 ] {} <Debug> HashJoin: Right sample block: field_a String String(size = 0), table_i.field_c UInt64 UInt64(size = 0)
2021.12.13 09:52:47.182413 [ 254 ] {} <Trace> HashJoin: Columns to add: [field_a String String(size = 0)], required right []
2021.12.13 09:52:47.182436 [ 254 ] {} <Trace> HashJoin: Joining on: Left keys: [field_c] Right keys [table_i.field_c] Condition columns: '', ''
2021.12.13 09:52:47.184696 [ 254 ] {} <Error> void DB::StorageKafka::threadFunc(size_t): Code: 215. DB::Exception: Column `field_a` is not under aggregate function and not in GROUP BY: While processing field_a, field_b, argMax(field_c, field_datetime) AS field_c, max(field_datetime) AS max_field_datetime. (NOT_AN_AGGREGATE), Stack trace (when copying this message, always include the lines below):

0. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool) @ 0x9b737d4 in /usr/bin/clickhouse
1. DB::ActionsMatcher::visit(DB::ASTIdentifier const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120d5f51 in /usr/bin/clickhouse
2. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0x120ddc78 in /usr/bin/clickhouse
3. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, false, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0x120ad017 in /usr/bin/clickhouse
4. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ActionsDAG>&, bool) @ 0x120ace2b in /usr/bin/clickhouse
5. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) @ 0x120b7869 in /usr/bin/clickhouse
6. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, bool, bool, bool, std::__1::shared_ptr<DB::FilterDAGInfo> const&, DB::Block const&) @ 0x120bc4d0 in /usr/bin/clickhouse
7. DB::InterpreterSelectQuery::getSampleBlockImpl() @ 0x123430ed in /usr/bin/clickhouse
8. ? @ 0x1233bc44 in /usr/bin/clickhouse
9. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::unordered_map<DB::PreparedSetKey, std::__1::shared_ptr<DB::Set>, DB::PreparedSetKey::Hash, std::__1::equal_to<DB::PreparedSetKey>, std::__1::allocator<std::__1::pair<DB::PreparedSetKey const, std::__1::shared_ptr<DB::Set> > > >) @ 0x123366a7 in /usr/bin/clickhouse
10. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::Context const>, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x12335034 in /usr/bin/clickhouse
11. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e647 in /usr/bin/clickhouse
12. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
13. DB::buildPushingToViewsChain(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, std::__1::shared_ptr<DB::Context const>, std::__1::shared_ptr<DB::IAST> const&, bool, DB::ThreadStatus*, std::__1::atomic<unsigned long>*, DB::Block const&) @ 0x1335e89d in /usr/bin/clickhouse
14. DB::InterpreterInsertQuery::buildChainImpl(std::__1::shared_ptr<DB::IStorage> const&, std::__1::shared_ptr<DB::StorageInMemoryMetadata const> const&, DB::Block const&, DB::ThreadStatus*, std::__1::atomic<unsigned long>*) @ 0x1231b4db in /usr/bin/clickhouse
15. DB::InterpreterInsertQuery::execute() @ 0x1231d8e9 in /usr/bin/clickhouse
16. DB::StorageKafka::streamToViews() @ 0x12c032fe in /usr/bin/clickhouse
17. DB::StorageKafka::threadFunc(unsigned long) @ 0x12c02168 in /usr/bin/clickhouse
18. DB::BackgroundSchedulePoolTaskInfo::execute() @ 0x11f1754e in /usr/bin/clickhouse
19. DB::BackgroundSchedulePool::threadFunction() @ 0x11f19f27 in /usr/bin/clickhouse
20. ? @ 0x11f1ae93 in /usr/bin/clickhouse
21. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x9bb5897 in /usr/bin/clickhouse
22. ? @ 0x9bb929d in /usr/bin/clickhouse
23. start_thread @ 0x9609 in /lib/libpthread.so.0
24. clone @ 0x122293 in /lib/libc.so.6
 (version 21.11.5.33 (official build))
2021.12.13 09:52:47.225403 [ 253 ] {} <Trace> StorageKafka (table_i_queue): Stalled
